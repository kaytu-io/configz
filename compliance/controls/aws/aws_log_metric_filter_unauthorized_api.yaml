Description: Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for unauthorized API calls.
DocumentURI: ""
ID: aws_log_metric_filter_unauthorized_api
Managed: true
ManualVerification: false
Query:
  Connector: AWS
  Engine: odysseus-v0.0.1
  ListOfTables:
  - aws_account
  - aws_cloudtrail_trail
  - aws_cloudwatch_alarm
  - aws_cloudwatch_log_metric_filter
  - aws_sns_topic_subscription
  PrimaryTable: aws_account
  QueryToExecute: "with filter_data as (\n  select\n    trail.account_id,\n    trail.name as trail_name,\n    trail.is_logging,\n    split_part(trail.log_group_arn, ':', 7) as log_group_name,\n    filter.name as filter_name,\n    action_arn as topic_arn,\n    alarm.metric_name,\n    subscription.subscription_arn,\n    filter.filter_pattern\n  from\n    aws_cloudtrail_trail as trail,\n    jsonb_array_elements(trail.event_selectors) as se,\n    aws_cloudwatch_log_metric_filter as filter,\n    aws_cloudwatch_alarm as alarm,\n    jsonb_array_elements_text(alarm.alarm_actions) as action_arn,\n    aws_sns_topic_subscription as subscription\n  where\n    trail.is_multi_region_trail is true\n    and trail.is_logging\n    and se ->> 'ReadWriteType' = 'All'\n    and trail.log_group_arn is not null\n    and filter.log_group_name = split_part(trail.log_group_arn, ':', 7)\n    -- As per cis recommended exact pattern order\n    -- {($.errorCode = \"*UnauthorizedOperation\") || ($.errorCode = \"AccessDenied*\") || ($.sourceIPAddress!=\"delivery.logs.amazonaws.com\") || ($.eventName!=\"HeadBucket\") }\n    and filter.filter_pattern ~ '\\$\\.errorCode\\s*=\\s*\"\\*UnauthorizedOperation\".+\\$\\.errorCode\\s*=\\s*\"AccessDenied\\*\".+\\$\\.sourceIPAddress\\s*!=\\s*\"delivery.logs.amazonaws.com\".+\\$\\.eventName\\s*!=\\s*\"HeadBucket\"'\n    and alarm.metric_name = filter.metric_transformation_name\n    and subscription.topic_arn = action_arn\n)\nselect\n  distinct 'arn:' || a.partition || ':::' || a.account_id as resource,\n  a.kaytu_account_id as kaytu_account_id,\n  a.kaytu_resource_id as kaytu_resource_id,\n  case\n    when f.trail_name is null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when f.trail_name is null then 'No log metric filter and alarm exist for unauthorized API calls.'\n    else filter_name || ' forwards events for unauthorized API calls.'\n  end as reason\n\n  , a.account_id\nfrom\n  aws_account as a\n  left join filter_data as f on a.account_id = f.account_id;\n"
Severity: high
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - "3.1"
  cis_level:
  - "1"
  cis_section_id:
  - "3"
  cis_type:
  - scored
  cis_version:
  - v1.2.0
  plugin:
  - aws
  service:
  - AWS/CloudWatch
  x-kaytu-explanation:
  - "In this AWS control, it is explained how users can monitor API calls in real-time by utilizing CloudTrail Logs and CloudWatch Logs.\n\n```markdown\n# Real-Time Monitoring of API Calls\n\nThis AWS control allows real-time monitoring of API calls using CloudTrail and CloudWatch Logs. \n\n## **How it works**\n1. **Directing CloudTrail Logs to CloudWatch Logs** - API calls from your system are tracked by CloudTrail and these logs are directed to CloudWatch.\n2. **Establishing Corresponding Metric Filters & Alarms** - In the next step, metric filters are established for these logs in CloudWatch. Alarms are also set up based on specific conditions that you can define.\n\n## **Recommended Practice**\nIt is recommended that a metric filter and alarm should be established specifically for unauthorized API calls. This will provide an extra layer of security by alerting you whenever any unauthorized API call is made.\n\nYou can customize the filters and alarm as per the requirements of your system.\n```\n\nPlease note that setting up filters and alarms may incur additional AWS service costs."
  x-kaytu-noncompliance-cost:
  - |-
    Non-compliance with the AWS control to monitor API calls in real-time by directing CloudTrail Logs to CloudWatch Logs can lead to several costs:

    1. **Security Risks:** Without real-time monitoring, unauthorized API calls or malicious activities could go unnoticed, leading to potential breaches of security and data loss/threats.

    2. **Financial Costs:** If unauthorized usage goes undetected, it could potentially lead to increased usage costs, especially if one's payment is dependent on the number of API calls made.

    3. **Regulatory Penalties:** Depending upon the industry and region, failure to monitor and log API calls could be in violation of compliance requirements or regulations, resulting in financial penalties.

    4. **Operational Efficiency:** Without proper monitoring, it's difficult to detect inefficiencies, optimize performance, or even implement automation that could save time, resource usage, and costs.

    5. **Debugging and Troubleshooting:** The logs are imperative for identifying and resolving any issues or bugs. Without real-time feedback, troubleshooting becomes much more difficult and time-consuming, affecting service availability.

    6. **Auditing and Reporting:** Monitoring API calls are critical for audit purposes and to generate usage reports, which are often required for internal tracking and/or regulatory compliance.
  x-kaytu-usefulness-example:
  - "For instance, imagine you work for a financial services firm that deals with highly sensitive client data. In accordance with regulatory requirements and to maintain customer trust, you need to take robust measures to secure this data. One area you're particularly worried about is unauthorized access to data through API calls. \n\nWith AWS, you can set up a control to closely monitor API calls in real-time. This is done by directing CloudTrail Logs to CloudWatch Logs, which can then establish corresponding metric filters and alarms. \n\nHere's a markup example: \n\n```\n# Define IAM policy for CloudWatchLogs access\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\",\n                \"logs:DescribeLogStreams\"\n            ],\n            \"Resource\": [\n                \"arn:aws:logs:*:*:*\"\n            ]\n        }\n    ]\n}\n\n# Create Metric Filter\n{\n    \"filterName\": \"UnauthorizedApiCalls\",\n    \"filterPattern\": \"{ ($.errorCode = \"*UnauthorizedOperation\") || ($.errorCode = \"AccessDenied*\") }\",\n    \"logGroupName\": \"CloudTrail/DefaultLogGroup\",\n    \"metricTransformations\": [\n        {\n            \"metricName\": \"UnauthorizedApiCallsCount\",\n            \"metricNamespace\": \"YourNamespace\",\n            \"metricValue\": \"1\"\n        }\n    ]\n}\n\n# Set up Alarm\n{\n    \"alarmName\": \"UnauthorizedApiCallsAlarm\",\n    \"alarmDescription\": \"Alarm when any unauthorized API calls are detected.\",\n    \"actionsEnabled\": true,\n    \"alarmActions\": [\"arn:aws:sns:us-east-1:123456789012:Alerts\"],\n    \"metricName\": \"UnauthorizedApiCallsCount\",\n    \"namespace\": \"YourNamespace\",\n    \"statistic\": \"Sum\",\n    \"period\": 300,\n    \"evaluationPeriods\": \"1\",\n    \"threshold\": \"1\",\n    \"comparisonOperator\": \"GreaterThanOrEqualToThreshold\"\n}\n```\n\nIn this scenario, CloudWatch Logs will track and store any unauthorized API calls based on the filter settings. An alarm will be triggered if any unauthorized API calls are found, alerting your security team to the situation.\n\nMonitoring in this way helps maintain high security levels with your AWS resources and ensures you're able to respond promptly to any potential threats."
Title: Ensure a log metric filter and alarm exist for unauthorized API calls
