{
  "ID": "aws_iam_policy_no_star_star",
  "Title": "IAM policies should not allow full '*' administrative privileges",
  "Description": "This control checks whether the default version of AWS Identity and Access Management policies (also known as customer managed policies) do not have administrator access with a statement that has 'Effect': 'Allow' with 'Action': '*' over 'Resource': '*'.",
  "Query": {
    "Engine": "odysseus-v0.0.1",
    "QueryToExecute": "with bad_policies as (\n  select\n    arn,\n    count(*) as num_bad_statements\n  from\n    aws_iam_policy,\n    jsonb_array_elements(policy_std -> 'Statement') as s,\n    jsonb_array_elements_text(s -> 'Resource') as resource,\n    jsonb_array_elements_text(s -> 'Action') as action\n  where\n    s ->> 'Effect' = 'Allow'\n    and resource = '*'\n    and (\n      (action = '*'\n      or action = '*:*'\n      )\n  )\n  group by\n    arn\n)\nselect\n  -- Required Columns\n  p.arn as resource,\n  p.kaytu_account_id as kaytu_account_id,\n  p.kaytu_resource_id as kaytu_resource_id,\n  case\n    when bad.arn is null then 'ok'\n    else 'alarm'\n  end status,\n  p.name || ' contains ' || coalesce(bad.num_bad_statements,0)  ||\n     ' statements that allow action \"*\" on resource \"*\".' as reason,\n  -- Additional Dimensions\n  p.account_id\nfrom\n  aws_iam_policy as p\n  left join bad_policies as bad on p.arn = bad.arn\nwhere\n  p.arn not like 'arn:aws:iam::aws:policy%'\n",
    "Connector": "AWS",
    "PrimaryTable": "aws_iam_policy",
    "ListOfTables": [
      "aws_iam_policy"
    ]
  },
  "ManualVerification": false,
  "Severity": "low",
  "Tags": {
    "pci": [
      "true"
    ],
    "pci_item_id": [
      "iam_3"
    ],
    "pci_requirements": [
      "7.2.1"
    ],
    "pci_version": [
      "v3.2.1"
    ],
    "plugin": [
      "aws"
    ],
    "service": [
      "iam"
    ]
  },
  "Managed": true
}