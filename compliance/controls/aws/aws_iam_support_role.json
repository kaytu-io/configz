{
  "ID": "aws_iam_support_role",
  "Title": "Ensure a support role has been created to manage incidents with AWS Support",
  "Description": "AWS provides a support center that can be used for incident notification and response, as well as technical support and customer services. Create an IAM Role to allow authorized users to manage incidents with AWS Support.",
  "Query": {
    "Connector": "AWS",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "aws_account",
      "aws_iam_role"
    ],
    "PrimaryTable": "aws_account",
    "QueryToExecute": "-- pgFormatter-ignore\nwith support_role_count as\n(\n  select\n    'arn:' || a.partition || ':::' || a.account_id as resource,\n    count(policy_arn),\n    a.account_id,\n    a.kaytu_account_id as kaytu_account_id,\n    a.kaytu_resource_id as kaytu_resource_id,\n    a._ctx\n  from\n    aws_account as a\n    left join aws_iam_role as r on r.account_id = a.account_id\n    left join jsonb_array_elements_text(attached_policy_arns) as policy_arn  on true\n  where\n    split_part(policy_arn, '/', 2) = 'AWSSupportAccess'\n    or policy_arn is null\n  group by\n    a.account_id,\n    a.partition,\n    a.kaytu_account_id,\n    a.kaytu_resource_id,\n    a._ctx\n)\nselect\n  resource,\n  kaytu_account_id as kaytu_account_id,\n  kaytu_resource_id as kaytu_resource_id,\n  case\n    when count \u003e 0 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when count = 1 then 'AWSSupportAccess policy attached to 1 role.'\n    when count \u003e 1 then 'AWSSupportAccess policy attached to ' || count || ' roles.'\n    else 'AWSSupportAccess policy not attached to any role.'\n  end  as reason\n  , account_id\nfrom\n  support_role_count;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "low",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "1.20"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "1"
    ],
    "cis_type": [
      "scored"
    ],
    "cis_version": [
      "v1.2.0"
    ],
    "plugin": [
      "aws"
    ],
    "service": [
      "AWS/IAM"
    ],
    "x-kaytu-explanation": [
      "The AWS Support Center is a portal provided by AWS that helps users manage, respond to, and notify about incidents. It facilitates technical support and customer service to handle everything from minor queries to major technical complications.\n\n## IAM Role for AWS Support\n\nCreating an IAM Role is crucial in AWS incident management for authorized users. When an IAM Role is created, it allows users to have delegated access to AWS services and resources.\n\nThis IAM Role should include policies that allow the user to create, manage, or close technical support cases with AWS Support.\n\nHere is a brief description of how to create an IAM role for AWS Support.\n\n```markdown\n1. Open the AWS Management Console.\n2. In the navigation pane, select **IAM**.\n3. Choose **Roles** and then **Create Role**.\n4. In the **Choose the service that will use this role** section, select **Support**.\n5. In the **Attach permissions policies** section, use the filter to find the **Support** policy and attach it.\n6. Name your role and provide a description. Click on **Create Role** once done.\n```\n\nIn this role, assign the user identity (individual IAM users, federated users, or applications) which require support access.\n\n### Note\nKeep in mind that AWS recommends creating an individual IAM Role for each use case, to follow the principle of least privilege, allowing AWS Support to perform only the necessary actions needed to resolve your case.\n\n-------------\nWith this IAM Role, authorized users will be able to work with AWS Support in order to manage incidents effectively."
    ],
    "x-kaytu-noncompliance-cost": [
      "Non-compliance to this AWS control can have several potential costs or consequences:\n\n1. **Increased Security Risk**: Without proper roles and permissions set up through AWS Identity and Access Management (IAM), unauthorized users may gain access to sensitive information or potentially exploit the system. This would significantly increase the security risks to your AWS environment.\n\n2. **Operational Disruption**: Without designated AWS support roles, it could take longer to respond to and resolve issues and incidents. This can cause operational disruption, negatively affecting your business's productivity and performance.\n\n3. **Increased Costs**: Slow response to and resolution of issues can also lead to added costs. For instance, extended downtime can result in loss of business and revenue. Moreover, if non-compliance leads to a data breach or other security incident, the financial costs can be substantial, including potential fines, investigation and recovery costs, etc.\n\n4. **Loss of Reputation**: Non-compliance to this AWS control can also damage your business's reputation, particularly if it leads to a security incident. Customers expect businesses to safeguard their information, and a breach of this trust can negatively impact your business's reputation, customer relationships and market position.\n\n5. **Regulatory Penalties**: Depending upon the industry and jurisdiction you operate in, non-compliance can also lead to legal and regulatory penalties. Regulations like GDPR, CCPA, and various others require businesses to take appropriate measures to protect information, and non-compliance can result in significant fines and penalties. \n\nThough AWS provides mechanisms to maintain proper access controls, it's essential for organizations to enforce and utilize them effectively to avoid these potential costs."
    ],
    "x-kaytu-usefulness-example": [
      "For instance, consider a scenario in which a company, let's call it XYZ Corp, that uses AWS for hosting their web applications. They have a team of IT specialists who handle any technical issues that occur. \n\nOne day, an unintentional configuration change causes the application to go down. The IT team is trying to identify the issue and fix it. If they have taken advantage of the AWS Support Center managed policy and created an IAM role specifically for this purpose, they can quickly interact with AWS Support for assistance in resolving this incident.\n\n``` \n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [{\n    \"Effect\": \"Allow\",\n    \"Action\": [\n      \"aws-portal:ViewBilling\",\n      \"aws-portal:ViewUsage\",\n      \"aws-portal:ViewPaymentMethods\",\n      \"aws-portal:ManagePaymentMethods\",\n      \"aws-portal:ViewAccount\",\n      \"aws-portal:EditAccountInformation\",\n      \"aws-portal:ViewSupportCenter\",\n      \"aws-portal:ManageSupportCenter\",\n      \"aws-portal:ManageServiceLimitIncrease\",\n      \"aws-portal:ManageSecurityCredentials\"\n        ],\n    \"Resource\": \"*\"\n  }]\n}\n```\n\nThe above IAM policy in AWS allows the IT team to interact directly with AWS Support Center. This means they can quickly troubleshoot the issue, perhaps even speed up the resolution by getting advice or instructions from AWS experts directly. It saves valuable time since the company's application remains inaccessible during that time. \n\nThis also lowers the risk of unauthorized users reaching out to AWS Support, preventing any potential confusion or miscommunication. Actions taken by authorized IT personnel are traceable and easily audited. \n\nTherefore, this AWS control is highly useful in managing technical incidents and getting them resolved as quickly as possible by authorized IT personnel."
    ]
  },
  "Managed": true
}