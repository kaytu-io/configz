{
  "ID": "aws_cis_v200_5_5",
  "Title": "Ensure routing tables for VPC peering are \"least access\"",
  "Description": "Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection.",
  "Query": null,
  "ManualVerification": true,
  "Severity": "medium",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "5.5"
    ],
    "cis_level": [
      "2"
    ],
    "cis_section_id": [
      "5"
    ],
    "cis_type": [
      "manual"
    ],
    "cis_version": [
      "v2.0.0"
    ],
    "plugin": [
      "aws"
    ],
    "service": [
      "AWS/VPC"
    ],
    "x-kaytu-explanation": [
      "AWS Control allows for the creation of VPC (Virtual Private Cloud) peering connections, which enables the users to share resources across different VPCs. This is a direct network route using private IP addresses. So, once a VPC peering connection is established, the VPCs can communicate on a private and secure network connection as if they were on the same network, but for the VPCs to communicate over the peering connection, you must update the routing tables.\n\nRouting tables direct the network traffic, defining where the network traffic is directed. For VPC peering to function properly, routing tables in each peered VPC need to be updated so that they include routes towards each other's CIDR blocks (IP address ranges) via the VPC peering connection.\n\nThese routes can be as specific as required. In other words, it's highly flexible - you're not limited to peering entire VPCs together. AWS Control allows you to define specific routes so that a VPC can peer with only a specific host (single device or server) on the other side of the connection.\n\nSo, this control provides not only the ability to create network connections between separate VPCs, but also the specificity to designate individual hosts within those VPCs.\n\nIn markup format it can be defined as:\n\n```markup\n# AWS VPC Peering Control\n\nWith AWS, you can establish **VPC peering connections** which enables sharing of resources across different VPCs. Once established, to enable the VPCs to communicate over the peering connection, routing tables need to be updated to include routes towards each other.\n\nThese routes can be made as specific as *targeting a single host* on the other side of the connection, making this control flexible and versatile.\n```"
    ],
    "x-kaytu-noncompliance-cost": [
      "The cost of non-compliance with this AWS control can lead to several issues:\n\n1. **Unavailability of Services:** If the routing tables are not properly updated, services and resources might not be reachable across the peered VPCs. This could lead to downtime and unavailability of services that depend on these resources, causing business disruptions.\n\n2. **Security Risks:** Misconfigured routing could potentially expose traffic to unintended networks or resources. This may open up potential security vulnerabilities that could be exploited.\n\n3. **Degraded Network Performance:** Inadequate routing could lead to inefficient network paths, causing slower connection speeds, higher latencies, and reduced overall network performance.\n\n4. **Operational Inefficiencies and Costs:** Investigation and troubleshooting network connectivity issues can consume valuable time and resources. Any downtime or availability issues could also have indirectly associated costs â€“ such as loss of reputation, customer dissatisfaction or SLA-associated penalties.\n\n5. **Audit and Compliance Failures:** If your AWS environment needs to comply with specific regulatory requirements or internal policies that require correct setup and management of VPC connections, then non-compliance with this control could lead to failed audits. This could further result in fees, fines or other legal implications. \n\nEach of these costs could have major implications depending on the criticality of the systems and data involved. As such, proper management of VPC connections including appropriate routing configurations is necessary."
    ],
    "x-kaytu-usefulness-example": [
      "Consider the following scenario:\n\nA company, TechCorp, has two departments, Engineering and Accounting. Each department has their own VPC in the AWS ecosystem, giving them the isolated network environments they need for their unique applications and services. \n\nThe Engineering department, located in the U.S., develops a critical web application hosted on EC2 instances within their VPC. On the other hand, the Accounting department, located in Germany, uses specific financial analytics tools that require data from this application. \n\nTo maintain high security levels, direct access to the application is limited solely to the Engineering department. However, for the Accounting department to function properly, a secure connection is needed to fetch the required data without exposing the whole network to potential threats.\n\nTo address this need, TechCorp establishes an AWS VPC peering connection between both departments' VPCs. With the peering connection, the traffic norm is that networks do not get exposed completely to each other, only necessary resources are shared.\n\nBut, just creating the peering connection alone will not make these resources available, routing tables need to be updated. In our scenario, this will enable the Accounting department to connect to the specific web application host but not any other resources within the Engineering VPC. By amending the routing table, a secure, direct and efficient connection can be established to this one required resource.\n\nHence, by making use of routing tables in a VPC peering connection, TechCorp can maintain strict network isolation while effectively sharing needed resources across departments located in different geographical locations."
    ]
  },
  "Managed": true
}