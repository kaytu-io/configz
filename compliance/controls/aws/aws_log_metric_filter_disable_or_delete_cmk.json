{
  "ID": "aws_log_metric_filter_disable_or_delete_cmk",
  "Title": "Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs",
  "Description": "Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for customer created CMKs which have changed state to disabled or scheduled deletion.",
  "Query": {
    "Connector": "AWS",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "aws_account",
      "aws_cloudtrail_trail",
      "aws_cloudwatch_alarm",
      "aws_cloudwatch_log_metric_filter",
      "aws_sns_topic_subscription"
    ],
    "PrimaryTable": "aws_account",
    "QueryToExecute": "with filter_data as (\n  select\n    trail.account_id,\n    trail.name as trail_name,\n    trail.is_logging,\n    split_part(trail.log_group_arn, ':', 7) as log_group_name,\n    filter.name as filter_name,\n    action_arn as topic_arn,\n    alarm.metric_name,\n    subscription.subscription_arn,\n    filter.filter_pattern\n  from\n    aws_cloudtrail_trail as trail,\n    jsonb_array_elements(trail.event_selectors) as se,\n    aws_cloudwatch_log_metric_filter as filter,\n    aws_cloudwatch_alarm as alarm,\n    jsonb_array_elements_text(alarm.alarm_actions) as action_arn,\n    aws_sns_topic_subscription as subscription\n  where\n    trail.is_multi_region_trail is true\n    and trail.is_logging\n    and se -\u003e\u003e 'ReadWriteType' = 'All'\n    and trail.log_group_arn is not null\n    and filter.log_group_name = split_part(trail.log_group_arn, ':', 7)\n    and filter.filter_pattern ~ '\\s*\\$\\.eventSource\\s*=\\s*kms.amazonaws.com.+\\$\\.eventName\\s*=\\s*DisableKey.+\\$\\.eventName\\s*=\\s*ScheduleKeyDeletion'\n    and alarm.metric_name = filter.metric_transformation_name\n    and subscription.topic_arn = action_arn\n)\nselect\n  distinct 'arn:' || a.partition || ':::' || a.account_id as resource,\n  a.kaytu_account_id as kaytu_account_id,\n  a.kaytu_resource_id as kaytu_resource_id,\n  case\n    when f.trail_name is null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when f.trail_name is null then 'No log metric filter and alarm exist for disabling/deletion of CMKs.'\n    else filter_name || ' forwards events for disabling/deletion of CMKs.'\n  end as reason\n  , a.account_id\nfrom\n  aws_account as a\n  left join filter_data as f on a.account_id = f.account_id;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "high",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "3.7"
    ],
    "cis_level": [
      "2"
    ],
    "cis_section_id": [
      "3"
    ],
    "cis_type": [
      "scored"
    ],
    "cis_version": [
      "v1.2.0"
    ],
    "plugin": [
      "aws"
    ],
    "service": [
      "AWS/CloudWatch"
    ],
    "x-kaytu-explanation": [
      "# Real-Time Monitoring of API calls \nReal-time monitoring of API calls using AWS services like **CloudTrail Logs** and **CloudWatch Logs** can be set up. By establishing corresponding metric filters and alarms, users can effectively monitor and manage any changes in their AWS environment. \n\n## Recommended Alarm Setup \n\n  It is highly recommended to set up a metric filter and alarm for `customer created CMKs (Customer Managed Keys)` which have changed state to either _disabled_ or _scheduled for deletion_. This will help you to keep a check on any substantial modifications to CMKs, hence ensuring security and control. \n\n## How to achieve it  \n  Here is a brief step by step guide:\n\n1. **Direct CloudTrail Logs to CloudWatch Logs**: This enables you to keep track of all API calls. \n\n2. **Establish Metric Filters**: These filters will help you to sift through the data and focus on what matters the most in an ocean of API calls. \n\n3. **Set up Alarms**: These will alert you whenever changes occur in your AWS environment that need your attention.\n  \nBy following these steps, you can efficiently monitor the activity of the environment in real-time, ensuring smooth operations.  \n\nPlease replace `customer created CMKs (Customer Managed Keys)` with your data."
    ],
    "x-kaytu-noncompliance-cost": [
      "Non-compliance to the AWS control specifying the establishment of a metric filter and alarm for customer created CMKs (Customer Master Keys) that have changed state to disabled or scheduled deletion can lead to several potential negative impacts, and thus impose cost burdens: \n\n1. **Security Risks - Undetected Threats**: If such monitoring through CloudTrail Logs and CloudWatch Logs is not in place, unexpected or unauthorized changes in the state of CMKs could go unnoticed. This could potentially indicate a security breach, which might expose sensitive data to unauthorized individuals.\n\n2. **Operational Disruption**: If critical operations depend on the services related to these CMKs and unexpected state changes occur, you might face business disruption, which can potentially result in significant financial loss.\n\n3. **Compliance Violations**: For industries where data security and integrity are governed by legal or industrial requirements, failing to accurately monitor and immediately react upon CMKs state changes might lead to non-compliance with standards. Non-compliance might lead to regulatory fines and penalties, and damage your companyâ€™s trust and reputation.\n\n4. **Increased Investigation and Recovery Costs**: In the event of a breach or unauthorized change of state in a CMK, failing to monitor in real-time might increase the costs associated with forensic investigation, remediation, data recovery, etc due to delayed discovery.\n\nThese costs can far exceed the resources spent to maintain compliance with the AWS control, highlighting the importance of adhering to such controls."
    ],
    "x-kaytu-usefulness-example": [
      "For a multi-tenant SaaS company known as BizTech, they heavily rely on AWS KMS (Key Management Service) to manage all their customer keys to encrypt and decrypt their data. The company recently experienced an incident where one of their employees accidentally disabled a customer key, resulting in loss of access to vital customer data. The incident took significant time to resolve and had reputational damage for BizTech.\n\nTo avoid such circumstances in the future, BizTech decided to implement real-time monitoring of API calls directing CloudTrail Logs to CloudWatch Logs with metric filters and alarms. They established a metric filter and alarm for any customer-created CMKs (Customer Master Keys) that have their state changed to either disabled or scheduled for deletion.\n\nWith this in place, BizTech was able to identify similar incidents in real-time from the CloudWatch dashboard. When an alarm was triggered, an urgent notification was sent to the concerned team to immediately review and rectify the situation. This helped avoid potential downtime and loss of key customer data, ensuring continuous access and robust security of their services. The real-time monitoring of API calls also offered them insights regarding the patterns of such incidents, enabling them to proactively manage the keys and strengthen their security measures."
    ]
  },
  "Managed": true
}