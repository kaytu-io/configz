Description: AWS console defaults the checkbox for creating access keys to enabled. This results in many access keys being generated unnecessarily. In addition to unnecessary credentials, it also generates unnecessary management work in auditing and rotating these keys.
DocumentURI: ""
ID: aws_iam_user_access_keys_and_password_at_setup
Managed: true
ManualVerification: false
Query:
  Connector: AWS
  Engine: odysseus-v0.0.1
  ListOfTables:
  - aws_iam_credential_report
  PrimaryTable: aws_iam_credential_report
  QueryToExecute: |
    select
      user_arn as resource,
      kaytu_account_id as kaytu_account_id,
      kaytu_resource_id as kaytu_resource_id,
      case
        -- alarm when password is enabled and the key was created within 10 seconds of the user
        when password_enabled and (extract(epoch from (access_key_1_last_rotated - user_creation_time)) < 10) then 'alarm'
        else 'ok'
      end as status,
      case
        when not password_enabled then user_name || ' password login disabled.'
        when access_key_1_last_rotated is null then user_name || ' has no access keys.'
        when password_enabled and (extract(epoch from (access_key_1_last_rotated - user_creation_time)) < 10)
          then user_name || ' has access key created during user creation and password login enabled.'
        else user_name || ' has access key not created during user creation.'
      end as reason
      , account_id
    from
      aws_iam_credential_report;
Severity: high
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - "1.21"
  cis_level:
  - "1"
  cis_section_id:
  - "1"
  cis_type:
  - not_scored
  cis_version:
  - v1.2.0
  plugin:
  - aws
  service:
  - AWS/IAM
  x-kaytu-explanation:
  - "# AWS Control Description\n\nAmazon Web Services (AWS) console provides its users with an option to automatically generate access keys by default. This feature is often enabled by users, leading to the generation of an excessive number of access keys. While these keys are crucial in ensuring secure access to AWS services, the overproduction of such keys can lead to an increase of unnecessary credentials.\n\nThis surplus of keys can become a management burden, as auditing and rotating these keys becomes a significant and time-consuming task. Therefore, it's recommended that users carefully manage their usage of access keys to avoid this issue. Regular audits and key rotations are advisable for maintaining a good security posture even with more manageable quantities of these access keys."
  x-kaytu-noncompliance-cost:
  - "There are several costs associated with non-compliance to the AWS Control related to unnecessary generation of access keys. \n\n1. **Increased Security Risk**: The more access keys there are, the higher the risk of security breaches. Unauthorized personnel may misuse them to gain illicit access to sensitive data and information. Security breaches can also damage the company's reputation. In worst-case scenarios, the stolen information could result in financial losses.\n\n2. **Increased Operational Complexity**: Having numerous unnecessary access keys adds to management complexities as you need to keep track of, audit, and rotate these keys regularly to limit security risks. This can consume a lot of time and resources, costing the organization both operationally and economically.\n\n3. **Inefficient Resource Use**: If key management is not automated, unnecessary manual workload can be generated for the IT team, diverting their efforts from more strategic tasks. Reviews and audits may also become excessively complex and time-consuming.\n\n4. **Potential Compliance Issues**: Depending on the industry's specific regulations, failing to manage access keys appropriately can lead to non-compliance with standards or laws. This can result in hefty fines and legal issues.\n\n5. **Cost implications**: Managing the lifecycle of access keys can cost a lot in terms of time and resources. Eliminating unnecessary keys can result in significant cost savings, especially for large organizations.\n\nTherefore, it is crucial that AWS users make use of the control to prevent unnecessary generation of access keys. This would help minimize potential security risks, save on management costs, simplify operations, and ensure compliance with relevant laws and regulations."
  x-kaytu-usefulness-example:
  - "For instance, a growing startup decides to migrate its operations to cloud and chose AWS as its provider, primarily due to its vast range of services and the scalability that it provides. When the team starts to take advantage of the AWS console, it finds out that the checkbox to generate access keys is automatically enabled, by default. \n\nThis feature, while designed to make the process more efficient, leads to an unnecessary creation of additional access keys, many of which are not being used. The startup, being in a growth phase, assigns multiple employees to manage cloud operations. This unchecked box quickly leads to numerous keys being generated, causing confusion and additional unnecessary credentials. \n\nFurthermore, it also increases the workload for the team responsible for system security. They have to keep auditing and rotating these keys at regular intervals to ensure the safety and security of the companyâ€™s resources, which adds into their operational overhead as well. Allowing users to manually enable key generation can reduce such issues. \n\n```markdown\nAWS Control: Ensure Console Checkbox for Access Key Creation is Disabled by Default \n\nScenario: \nA startup company \"XYZ\" is migrating its infrastructure to AWS. The team of XYZ accidentally creates multiple access keys due to the default setting of AWS console. The unnecessary generation of keys increases their management work in auditing and rotating these keys. \n\nBenefits:\nBy avoiding automatic key creation, XYZ can overcome these challenges. A control in AWS that disables key creation by default can significantly reduce unnecessary key generations, thereby reducing workload on the security team and making management of access keys more streamlined and efficient.\n```"
Title: Do not setup access keys during initial user setup for all IAM users that have a console password
