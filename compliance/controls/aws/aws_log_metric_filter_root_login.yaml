Description: Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for root login attempts.
DocumentURI: ""
ID: aws_log_metric_filter_root_login
Managed: true
ManualVerification: false
Query:
  Connector: AWS
  Engine: odysseus-v0.0.1
  ListOfTables:
  - aws_account
  - aws_cloudtrail_trail
  - aws_cloudwatch_alarm
  - aws_cloudwatch_log_metric_filter
  - aws_sns_topic_subscription
  PrimaryTable: aws_account
  QueryToExecute: "with filter_data as (\n  select\n    trail.account_id,\n    trail.name as trail_name,\n    trail.is_logging,\n    split_part(trail.log_group_arn, ':', 7) as log_group_name,\n    filter.name as filter_name,\n    action_arn as topic_arn,\n    alarm.metric_name,\n    subscription.subscription_arn,\n    filter.filter_pattern\n  from\n    aws_cloudtrail_trail as trail,\n    jsonb_array_elements(trail.event_selectors) as se,\n    aws_cloudwatch_log_metric_filter as filter,\n    aws_cloudwatch_alarm as alarm,\n    jsonb_array_elements_text(alarm.alarm_actions) as action_arn,\n    aws_sns_topic_subscription as subscription\n  where\n    trail.is_multi_region_trail is true\n    and trail.is_logging\n    and se ->> 'ReadWriteType' = 'All'\n    and trail.log_group_arn is not null\n    and filter.log_group_name = split_part(trail.log_group_arn, ':', 7)\n    and filter.filter_pattern ~ '\\s*\\$\\.userIdentity\\.type\\s*=\\s*\"Root\".+\\$\\.userIdentity\\.invokedBy NOT EXISTS.+\\$\\.eventType\\s*!=\\s*\"AwsServiceEvent\"'\n    and alarm.metric_name = filter.metric_transformation_name\n    and subscription.topic_arn = action_arn\n)\nselect\n  distinct 'arn:' || a.partition || ':::' || a.account_id as resource,\n  a.kaytu_account_id as kaytu_account_id,\n  a.kaytu_resource_id as kaytu_resource_id,\n  case\n    when f.trail_name is null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when f.trail_name is null then 'No log metric filter and alarm exist for usage of \"root\" account.'\n    else filter_name || ' forwards events for usage of \"root\" account.'\n  end as reason\n\n  , a.account_id\nfrom\n  aws_account as a\n  left join filter_data as f on a.account_id = f.account_id;\n"
Severity: high
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - "3.3"
  cis_level:
  - "1"
  cis_section_id:
  - "3"
  cis_type:
  - scored
  cis_version:
  - v1.2.0
  plugin:
  - aws
  service:
  - AWS/CloudWatch
  x-kaytu-explanation:
  - "`AWS` or Amazon Web Services provides a cloud platform that allows users with real-time monitoring for API calls. A method to achieve this is through directing `CloudTrail Logs` to `CloudWatch Logs` and setting up corresponding metric filters and alarms. \n\n```markdown\nAWS Services Involved:\n\n- **CloudTrail**: AWS CloudTrail is a service that enables governance, compliance, operational auditing, and risk auditing of your AWS account. \n\n- **CloudWatch Logs**: AWS CloudWatch Logs lets you monitor, store, and access your log files from Amazon EC2 instances, AWS CloudTrail, and other sources.\n\nProcedure:\n\n1. Direct CloudTrail logs to CloudWatch Logs. This will involve going into the AWS Management Console, finding CloudTrail service and then create a new trail. In this process, the user can then define the destination of the log and direct this to CloudWatch Logs.\n\n2. After logs are directed to CloudWatch, users can create `Metric filters` to transform log data into numerical CloudWatch metrics that you can graph or set an alarm on. \n\n3. Set alarms to notify of any changes or events. For example, the user can create alarms that watch specific metrics and send a message to your Amazon SNS topic or Auto Scaling policy if the value of the metric exceeds a threshold that you specify.\n\nThe recommendation is to establish a metric filter and alarm specifically for `root login` attempts. This setup acts as a control measure to monitor and guard against unauthorized access to your AWS resources.\n```\n\nRemember, the root account has unrestricted access and privileges to all your resources. Therefore, it's advised to monitor any login attempts to it. This control will enable the AWS account owner to be alerted in case any root login attempt takes place for security purposes."
  x-kaytu-noncompliance-cost:
  - "The cost of non-compliance with this AWS Control could lead to several consequences that are both financial and reputational in nature:\n\n1. **Security Breach**: Non-compliance may result in a lack of oversight and detection capabilities for malicious or unauthorized activity. If a root login attempt occurred and was not monitored or detected, this could potentially lead to an unauthorized individual gaining access to sensitive data or system resources.\n\n2. **Financial Risks**: If a security breach occurs, it can have a substantial financial cost associated with disaster recovery, data breaches, or any other remedial actions that need to be taken. Beyond direct losses, organizations may also face lawsuits, regulatory fines, or penalties for non-compliance.\n\n3. **Reputational Damage**: In the event that a security breach becomes public knowledge, a company may suffer reputational damage which can result in lost business or partnerships. This can be even more damaging and longer-lasting than the direct financial costs of the breach itself.\n\n4. **Regulatory Compliance**: Depending on the industry, there might be mandatory requirements around log and access management. Failure to meet these requirements could lead to your organization falling out of regulatory compliance, which brings the risk of penalties, fines, or even legal action.\n\n5. **Operational Inefficiencies**: By not monitoring API calls in real-time, the opportunity to promptly identify and fix potential problems is missed. This could lead to ongoing inefficiencies, operational issues, and a potentially slower response to fixing problems when they do occur.\n\n6. **Audit Failure**: If auditing is required, failure to monitor API calls might result in a failure in the audit. This leads to potential risks tied to breach of contract, fines or penalties, loss of certification, or damage to the organization's reputation.\n\nTo conclude, the cost of non-compliance is multidimensional, and can extend to a company's finances, reputation, operations, and more. Therefore, a monitoring and alarm system for root login attempts is an essential control for maintaining security and data integrity."
  x-kaytu-usefulness-example:
  - |-
    For instance, if you run a web service with Amazon Web Services (AWS), you're likely utilizing AWS's APIs to manage and configure your services. However, you may also be granting API access to third parties, such as developers designing applications that interact with your services.

    This presents a potential security risk, particularly with high-level "root" access that includes full administrative permissions. An unauthorized or accidental root login could hugely impact your services or data.

    Therefore, by directing AWS CloudTrail Logs, which logs all API calls, to the AWS CloudWatch Logs, you can create a real-time monitoring system.

    Here is a sample AWS CloudTrail to CloudWatch Logs setup instruction block:

    ```markup
    1. Open the CloudWatch console.
    2. In the navigation pane, choose `Logs`.
    3. In the content pane, choose `Create log group`.
    4. For `Log Group Name`, type a name for the log group, such as `MyAppLogGroup`.
    5. Choose `Create log group`.
    6. Open the CloudTrail console.
    7. In the navigation pane, choose `Trails`.
    8. In the content pane, choose the trail whose events you want to monitor.
    9. Choose `Edit`.
    10. In the CloudWatch Logs section, select `Send events to CloudWatch Logs`.
    11. For `Log group`, choose the log group you just created in CloudWatch Logs.
    12. Choose `Save`.
    ```

    Afterwards, you could set up a metric filter and alarm for root login attempts. In that way, you will get a real-time alert whenever a root login attempt is made, allowing you to spot and stop any possible security threats in real-time.
Title: Ensure a log metric filter and alarm exist for usage of "root" account
