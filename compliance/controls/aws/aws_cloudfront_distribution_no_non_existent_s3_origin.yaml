ID: aws_cloudfront_distribution_no_non_existent_s3_origin
Title: CloudFront distributions should not point to non-existent S3 origins
Description: This control checks whether Amazon CloudFront distributions are pointing to non-existent Amazon S3 origins. The control fails for a CloudFront distribution if the origin is configured to point to a non-existent bucket. This control only applies to CloudFront distributions where an S3 bucket without static website hosting is the S3 origin.
Query:
  Engine: odysseus-v0.0.1
  QueryToExecute: "with distribution_with_non_existent_bucket as (\n  select\n    distinct d.arn as arn,\n    to_jsonb(string_to_array((string_agg(split_part(o ->> 'Id', '.s3', 1), ',')),',')) as bucket_name_list\n  from\n    aws_cloudfront_distribution as d,\n    jsonb_array_elements(d.origins) as o\n    left join aws_s3_bucket as b on b.name = split_part(o ->> 'Id', '.s3', 1)\n  where\n    b.name is null\n    and o ->> 'DomainName' like '%.s3.%'\n  group by\n    d.arn\n)\nselect\n  distinct b.arn as resource,\n  d.kaytu_account_id as kaytu_account_id,\n  d.kaytu_resource_id as kaytu_resource_id,\n  case\n    when b.arn is null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when b.arn is null then title || ' does not point to any non-existent S3 origins.'\n    when jsonb_array_length(b.bucket_name_list) > 0\n      then title ||\n    case\n      when jsonb_array_length(b.bucket_name_list) > 2\n        then concat(' point to non-existent S3 origins ', b.bucket_name_list #>> '{0}', ', ', b.bucket_name_list #>> '{1}', ' and ' || (jsonb_array_length(b.bucket_name_list) - 2)::text || ' more.' )\n      when jsonb_array_length(b.bucket_name_list) = 2\n        then concat(' point to non-existent S3 origins ', b.bucket_name_list #>> '{0}', ' and ', b.bucket_name_list #>> '{1}', '.')\n    else concat(' point to non-existent S3 origin ', b.bucket_name_list #>> '{0}', '.')\n    end\n  end as reason\n  \n  , region, account_id\nfrom\n  aws_cloudfront_distribution as d\n  left join distribution_with_non_existent_bucket as b on b.arn = d.arn;\n"
  Connector: AWS
  PrimaryTable: aws_cloudfront_distribution
  ListOfTables:
  - aws_cloudfront_distribution
  - aws_s3_bucket
ManualVerification: false
Severity: high
Tags:
  aws_foundational_security:
  - "true"
  category:
  - Compliance
  foundational_security_category:
  - resource_configuration
  foundational_security_item_id:
  - cloudfront_12
  plugin:
  - aws
  service:
  - AWS/CloudFront
Managed: true
