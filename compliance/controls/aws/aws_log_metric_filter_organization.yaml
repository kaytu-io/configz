Description: Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for AWS Organizations changes made in the master AWS Account.
DocumentURI: ""
ID: aws_log_metric_filter_organization
Managed: true
ManualVerification: false
Query:
  Connector: AWS
  Engine: odysseus-v0.0.1
  ListOfTables:
  - aws_account
  - aws_cloudtrail_trail
  - aws_cloudwatch_alarm
  - aws_cloudwatch_log_metric_filter
  - aws_sns_topic_subscription
  PrimaryTable: aws_account
  QueryToExecute: "with filter_data as (\n  select\n    trail.account_id,\n    trail.name as trail_name,\n    trail.is_logging,\n    split_part(trail.log_group_arn, ':', 7) as log_group_name,\n    filter.name as filter_name,\n    action_arn as topic_arn,\n    alarm.metric_name,\n    alarm.name as alarm_name,\n    subscription.subscription_arn,\n    filter.filter_pattern\n  from\n    aws_cloudtrail_trail as trail,\n    jsonb_array_elements(trail.event_selectors) as se,\n    aws_cloudwatch_log_metric_filter as filter,\n    aws_cloudwatch_alarm as alarm,\n    jsonb_array_elements_text(alarm.alarm_actions) as action_arn,\n    aws_sns_topic_subscription as subscription\n  where\n    trail.is_multi_region_trail is true\n    and trail.is_logging\n    and se ->> 'ReadWriteType' = 'All'\n    and trail.log_group_arn is not null\n    and filter.log_group_name = split_part(trail.log_group_arn, ':', 7)\n    and filter.filter_pattern ~ '\\s*\\$\\.eventSource\\s*=\\s*organizations.amazonaws.com.+\\$\\.eventName\\s*=\\s*\"?AcceptHandshake\"?.+\\$\\.eventName\\s*=\\s*\"?AttachPolicy\"?.+\\$\\.eventName\\s*=\\s*\"?CreateAccount\"?.+\\$\\.eventName\\s*=\\s*\"?CreateOrganizationalUnit\"?.+\\$\\.eventName\\s*=\\s*\"?CreatePolicy\"?.+\\$\\.eventName\\s*=\\s*\"?DeclineHandshake\"?.+\\$\\.eventName\\s*=\\s*\"?DeleteOrganization\"?.+\\$\\.eventName\\s*=\\s*\"?DeleteOrganizationalUnit\"?.+\\$\\.eventName\\s*=\\s*\"?DeletePolicy\"?.+\\$\\.eventName\\s*=\\s*\"?DetachPolicy\"?.+\\$\\.eventName\\s*=\\s*\"?DisablePolicyType\"?.+\\$\\.eventName\\s*=\\s*\"?EnablePolicyType\"?.+\\$\\.eventName\\s*=\\s*\"?InviteAccountToOrganization\"?.+\\$\\.eventName\\s*=\\s*\"?LeaveOrganization\"?.+\\$\\.eventName\\s*=\\s*\"?MoveAccount\"?.+\\$\\.eventName\\s*=\\s*\"?RemoveAccountFromOrganization\"?.+\\$\\.eventName\\s*=\\s*\"?UpdatePolicy\"?.+\\$\\.eventName\\s*=\\s*\"?UpdateOrganizationalUnit\"?'\n    and alarm.metric_name = filter.metric_transformation_name\n    and subscription.topic_arn = action_arn\n)\nselect\n  distinct 'arn:' || a.partition || ':::' || a.account_id as resource,\n  a.kaytu_account_id as kaytu_account_id,\n  a.kaytu_resource_id as kaytu_resource_id,\n  case\n    when f.trail_name is null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when f.trail_name is null then 'No log metric filter and alarm exists for AWS Organizations changes.'\n    else filter_name || ' forwards relevant events for AWS Organizations changes.'\n  end as reason\n  , a.account_id\nfrom\n  aws_account as a\n  left join filter_data as f on a.account_id = f.account_id;\n"
Severity: high
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - "4.15"
  cis_level:
  - "1"
  cis_section_id:
  - "4"
  cis_type:
  - automated
  cis_version:
  - v1.3.0
  plugin:
  - aws
  service:
  - AWS/CloudWatch
  x-kaytu-explanation:
  - "```markdown\n**Real-Time Monitoring of API Calls**\n\nIn AWS, real-time monitoring of API calls can be achieved by utilizing CloudTrail Logs and CloudWatch Logs. These two features work hand-in-hand to enable you to keep a close eye on all API activity across your AWS environment. \n\n1. **CloudTrail Logs**: Amazon CloudTrail is a service that logs all API activity in your AWS account. By turning on CloudTrail, you can track every action and change made in your environment.\n\n2. **CloudWatch Logs**: Amazon CloudWatch Logs is a monitoring and troubleshooting service. It helps you to aggregate, analyse and store logs from your environment. By directing the CloudTrail Logs to CloudWatch, you can get a centralized platform where you can monitor and troubleshoot any issues based on the log data.\n\n3. **Metric Filters and Alarms**: By setting up metric filters and alarms in CloudWatch, you can trigger actions based on specific patterns or thresholds. For example, you can create a metric filter to match certain text or numerical patterns in log data, and then set an alarm based on that filter.\n\nSpecifically, it's highly advised to set up a metric filter and alarm for any changes made in AWS Organizations in the master AWS Account. By doing so, you'll receive immediate notifications whenever changes are made, allowing you to respond promptly and maintain high security standards.\n```"
  x-kaytu-noncompliance-cost:
  - "Non-compliance to this AWS control means that your organization may not be able to detect unauthorized or suspicious activity in real-time, as you may not be monitoring the API calls.\n\nThis might lead to several potential costs, including:\n\n1. **Security Incidents**: The absence of real-time monitoring increases the risk of security incidents going unnoticed. This could potentially result in data breaches, leading to monetary losses and loss of customer trust.\n\n2. **Regulatory Fines**: Depending on the industry and the jurisdiction of your business, you may be required by law to maintain a certain level of security and compliance. Non-compliance could lead to hefty regulatory fines.\n\n3. **Incident Response**: Without real-time monitoring, it could take longer to discover and respond to security incidents. This delay might significantly increase the costs related to incident response, including the resource time, potential system downtime, and the cost of remedial actions.\n\n4. **Loss of Reputation**: Data breaches or security incidents coming to light can damage an organization's reputation, resulting in loss of customer trust and potentially leading to loss of business.\n\n5. **Operational Costs**: Without a metric filter and alarm for AWS Organizations changes, it may require more significant manual effort to review and analyze logs, increasing operational costs.\n\nIn conclusion, not implementing real-time monitoring of API calls through CloudTrail logs can lead to avoidable financial costs and potential damage to the organizationâ€™s reputation."
  x-kaytu-usefulness-example:
  - |-
    Example:

    A multinational corporation, XYZ Corp., uses AWS for its tech infrastructure. This includes dozens of AWS member accounts under a single AWS master account. The tech team wants to monitor all changes made to their AWS Organizations setup in real-time to ensure compliances, detect abnormal activities and mitigate unauthorized changes as soon as possible. 

    By forwarding their CloudTrail Logs to CloudWatch Logs and setting up metric filters and alarms, XYZ Corp. can ensure any changes in the AWS Organizations configuration on their master account are immediately identified and alerted to the relevant staff. 

    For instance, the company can create a metric filter that tracks calls to organizations:Update* API operations, which essentially captures any modification applied to the structure of their AWS Organizations setup (such as disabling a service, inviting an account to the organization, removing a member account, etc.). If any such activity gets detected, CloudWatch alarm can be configured to notify their security team right away via email or SMS.

    This way, XYZ Corp maintains continuous visibility over its critical AWS infrastructure changes, and can instantly identify and react to any undesired configuration updates. This mechanism plays a vital role in maintaining the security and integrity of their tech structure.
Title: Ensure a log metric filter and alarm exists for AWS Organizations changes
