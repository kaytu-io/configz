{
  "ID": "aws_iam_server_certificate_not_expired",
  "Title": "Ensure that all the expired SSL/TLS certificates stored in AWS IAM are removed",
  "Description": "To enable HTTPS connections to your website or application in AWS, you need an SSL/TLS server certificate. You can use ACM or IAM to store and deploy server certificates. Use IAM as a certificate manager only when you must support HTTPS connections in a region that is not supported by ACM. IAM securely encrypts your private keys and stores the encrypted version in IAM SSL certificate storage. IAM supports deploying server certificates in all regions, but you must obtain your certificate from an external provider for use with AWS. You cannot upload an ACM certificate to IAM. Additionally, you cannot manage your certificates from the IAM Console.",
  "Query": {
    "Connector": "AWS",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "aws_iam_server_certificate"
    ],
    "PrimaryTable": "aws_iam_server_certificate",
    "QueryToExecute": "select\n  arn as resource,\n  kaytu_account_id as kaytu_account_id,\n  kaytu_resource_id as kaytu_resource_id,\n  case when expiration \u003c (current_date - interval '1' second) then 'alarm'\n  else 'ok'\n  end as status,\n  case when expiration \u003c (current_date - interval '1' second) then\n    name || ' expired ' || to_char(expiration, 'DD-Mon-YYYY') || '.'\n  else\n    name || ' valid until ' || to_char(expiration, 'DD-Mon-YYYY')  || '.'\n  end as reason\n  \n  , account_id\nfrom\n  aws_iam_server_certificate;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "medium",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "1.19"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "1"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.3.0"
    ],
    "plugin": [
      "aws"
    ],
    "service": [
      "AWS/IAM"
    ],
    "x-kaytu-explanation": [
      "```markdown\n# Enabling HTTPS Connections in AWS \n\nIn order to establish secure HTTPS connections to your application or website hosted on AWS, you need to use an SSL/TLS server certificate. AWS provides two main services to host and deploy these server certificates - the AWS Certificate Manager (ACM) and the Identity and Access Management (IAM). \n\n## AWS Certificate Manager\n\nACM is the primary service for handling SSL/TLS certificates. However, ACM's support is limited to certain regions. \n\n## Identity and Access Management \n\nIn cases where ACM doesn't support your specific region, you can use IAM as your certificate manager. IAM provides secure encryption for your private keys and also stores the encrypted keys within its SSL certificate repository. \n\nKeeping in mind that IAM supports all regions, you must procure your certificate from an external provider for its use with AWS. And, while you can't upload ACM certificates to IAM, keep in mind that certificate management operations are not supported via IAM Console as well.\n\n```\n"
    ],
    "x-kaytu-noncompliance-cost": [
      "The cost of non-compliance to the aforementioned AWS control is multi-faceted and includes aspects such as:\n\n1. **Security Risks:** Without an SSL/TLS server certificate, data transferred between users and the website/application is not secure and can be intercepted or manipulated. This increases the risk of data breaches and cyberattacks that can result to the loss or theft of customer data.\n\n2. **Financial Loss:** In the event of a data breach, the company may face significant financial losses. These may result from remediating the breach, potential fines and penalties imposed by regulatory bodies, and loss of business and customer trust.\n\n3. **Regulatory Legal Consequences:** Depending on the country and the industry that the organization operates in, the use of secure connections may be mandated by law or regulations such as GDPR, HIPAA, PCI-DSS etc. Non-compliance could therefore lead to legal proceedings, fines, and further damaging exposure.\n\n4. **Trust and Brand Image:** Businesses found non-compliant to these AWS controls and with poor security practices stand to suffer considerable damage to their brand image and customer trust. Clients are less likely to conduct business with companies they view as untrustworthy due to poor data handling and security practices.\n\n5. **Business Continuity:** If a data breach renders a website or service unavailable, it disrupts business continuity, potentially leading to loss of revenue and customers. Moreover, efforts to restore operations could add to costs.\n\n6. **Cost of Obtaining Certificates from External Providers:** If a company needs to support HTTPS connections in a region not supported by ACM and needs to use IAM as a certificate manager, it needs to obtain its certificate from an external provider. Depending on the chosen provider, this could add additional costs. \n\nAs such, non-compliance to this AWS control doesn't only present financial threats, but reputation, legal, and operational risks as well."
    ],
    "x-kaytu-usefulness-example": [
      "AWS IAM (Identity and Access Management) is useful in scenarios where ACM (AWS Certificate Manager) isn't supported in certain regions. For example, let's say you are running a global e-commerce website hosted on various AWS regions including some where ACM is not available.\n\nIn such a case, IAM gives you the possibility to deploy server certificates for ensuring HTTPS connections in those unsupported regions. For secure communications over the public internet, your website needs an SSL/TLS certificate. IAM can help upload and deploy these certificates securely, as it encrypts your private keys for security.\n\nSo if your certificate provider is an external entity and not ACM, or if your region doesn't support ACM, IAM ensures that you're still able to use HTTPS for secure connections on your website. It allows for server certificates to be deployed all regions ensuring full coverage for your global application. However, keep in mind, the management of these certificates cannot be done through the IAM Console, you will have to use the specific methods provided by IAM for these tasks.\n\n```markdown\nExample:\n- E-commerce website: The `global website` uses IAM to `store and deploy` server certificates in regions where ACM is unsupported. \n- External certificate provider: If the `SSL/TLS certificates` are obtained from an `external provider`, IAM enables uploading and deploying these on AWS.\n```\nOverall, IAM fills the gaps left by ACM's unavailability making it essential for seamless, secure global applications."
    ]
  },
  "Managed": true
}