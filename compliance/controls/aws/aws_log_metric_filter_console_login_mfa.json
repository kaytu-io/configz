{
  "ID": "aws_log_metric_filter_console_login_mfa",
  "Title": "Ensure a log metric filter and alarm exist for Management Console sign-in without MFA",
  "Description": "Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for console logins that are not protected by multi-factor authentication (MFA).",
  "Query": {
    "Connector": "AWS",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "aws_account",
      "aws_cloudtrail_trail",
      "aws_cloudwatch_alarm",
      "aws_cloudwatch_log_metric_filter",
      "aws_sns_topic_subscription"
    ],
    "PrimaryTable": "aws_account",
    "QueryToExecute": "with filter_data as (\n  select\n    trail.account_id,\n    trail.name as trail_name,\n    trail.is_logging,\n    split_part(trail.log_group_arn, ':', 7) as log_group_name,\n    filter.name as filter_name,\n    action_arn as topic_arn,\n    alarm.metric_name,\n    subscription.subscription_arn,\n    filter.filter_pattern\n  from\n    aws_cloudtrail_trail as trail,\n    jsonb_array_elements(trail.event_selectors) as se,\n    aws_cloudwatch_log_metric_filter as filter,\n    aws_cloudwatch_alarm as alarm,\n    jsonb_array_elements_text(alarm.alarm_actions) as action_arn,\n    aws_sns_topic_subscription as subscription\n  where\n    trail.is_multi_region_trail is true\n    and trail.is_logging\n    and se -\u003e\u003e 'ReadWriteType' = 'All'\n    and trail.log_group_arn is not null\n    and filter.log_group_name = split_part(trail.log_group_arn, ':', 7)\n    and filter.filter_pattern ~ '\\(\\s*\\$\\.eventName\\s*=\\s*\"ConsoleLogin\"\\)\\s+\u0026\u0026\\s+\\(\\s*\\$.additionalEventData\\.MFAUsed\\s*!=\\s*\"Yes\"'\n    and alarm.metric_name = filter.metric_transformation_name\n    and subscription.topic_arn = action_arn\n)\nselect\n  distinct 'arn:' || a.partition || ':::' || a.account_id as resource,\n  a.kaytu_account_id as kaytu_account_id,\n  a.kaytu_resource_id as kaytu_resource_id,\n  case\n    when f.trail_name is null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when f.trail_name is null then 'No log metric filter and alarm exist for console sign-in without MFA.'\n    else filter_name || ' forwards events for console sign-in without MFA.'\n  end as reason\n\n  , a.account_id\nfrom\n  aws_account as a\n  left join filter_data as f on a.account_id = f.account_id;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "high",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "3.2"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "3"
    ],
    "cis_type": [
      "scored"
    ],
    "cis_version": [
      "v1.2.0"
    ],
    "plugin": [
      "aws"
    ],
    "service": [
      "AWS/CloudWatch"
    ],
    "x-kaytu-explanation": [
      "## AWS API Call Monitoring and MFA-Protected Console Login\n\nAWS provides several tools that can be used to enhance the security and monitoring of your services. Two of these tools are `CloudTrail Logs` and `CloudWatch Logs`. By directing your CloudTrail Logs to CloudWatch Logs, you can achieve real-time monitoring of your API calls.\n\n**Here's how it works:**\n\nYou create `metric filters` in CloudWatch Logs. These filters transform the raw data of your logs into a format that's easier to understand, and then send this data to `alarms` that can notify you when certain events occur, or when the value of a metric exceeds a threshold you've defined.\n\nBuilding on this, it's highly recommended to set a metric filter and alarm for console logins that aren't protected by MFA (Multi-Factor Authentication). This will allow you to be notified when a potentially insecure login occurs, adding an extra layer of security to your services.\n\nHere is a brief outline of the process:\n\n```markup\n1. Direct CloudTrail Logs to CloudWatch Logs.\n2. Set up metric filters in CloudWatch Logs.\n3. Establish corresponding alarms.\n4. Especially, set a metric filter and alarm for console logins not protected by MFA.\n```\n\nWith this configuration, you'll be able to monitor your API calls in real-time and ensure that your console logins are secured properly. If a login attempt is made without MFA, you'll receive an immediate notification so you can take appropriate action.\n\nAWS provides extensive documentation and step-by-step guides on how to set this up, so even if you're new to AWS or aren't familiar with these services, you can easily get started."
    ],
    "x-kaytu-noncompliance-cost": [
      "The cost of non-compliance to this AWS control could result in several potential negative impacts, including:\n\n1. **Security Risk:** Without establishing a metric filter and alarm for unprotected console logins, unauthorized access may occur without detection. An attacker could potentially gain access to sensitive data, modify infrastructure, or disrupt services.\n\n2. **Financial Cost:** If an unauthorized user gained access, they could potentially launch additional and costly resources which would increase your AWS billing. They may also delete or modify resources which could result in service disruption leading to potential loss of business and recovery costs.\n\n3. **Regulatory Penalties:** If your organization is subject to regulations that require certain security controls and you fail to comply, there may be financial penalties, audits, or more severe consequences. For example, if you're under GDPR or HIPAA, non-compliance can result in heavy financial penalties.\n\n4. **Reputation Damage:** A security breach could result in significant reputational damage which may result in loss of customers/business. It could also diminish trust with partners and potential customers.\n\n5. **Loss or Exposure of Sensitive Data:** If an attacker gains unauthorized access without MFA, they may be able to access and steal sensitive data, which could lead to additional costs related to data breaches.\n\n \n\nTherefore, complying with this AWS control by implementing real-time monitoring of API calls and setting alarms for non-MFA protected console logins is integral to maintaining a strong security posture, avoiding unnecessary costs, and ensuring regulatory compliance."
    ],
    "x-kaytu-usefulness-example": [
      "Example:\n\nAn organization has multiple users who login to the AWS Management Console to perform various tasks. However, to ensure the highest level of security, the organization wants to make sure that every console login is protected by multi-factor authentication (MFA). \n\nIn order to accomplish this, the organization can utilize the AWS CloudTrail to track each API call and then direct these logs to AWS CloudWatch. By creating a metric filter for console logins not protected by MFA, the organization can actively monitor any users that may attempt to login without the appropriate authentication. Further, alarms can be set up to immediately alert the responsible cybersecurity team of any such instance. \n\nThis setup will be beneficial in identifying and rectifying security loopholes, ultimately strengthening the overall security of AWS resources. It also helps in achieving compliance with regulations that call for strong access controls."
    ]
  },
  "Managed": true
}