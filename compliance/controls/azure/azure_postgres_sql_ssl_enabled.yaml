Description: Enable SSL connection on PostgreSQL Servers.
DocumentURI: ""
ID: azure_postgres_sql_ssl_enabled
Managed: true
ManualVerification: false
Query:
  Connector: Azure
  Engine: odysseus-v0.0.1
  ListOfTables:
  - azure_postgresql_server
  - azure_subscription
  PrimaryTable: azure_postgresql_server
  QueryToExecute: |
    select
      s.id as resource,
      s.kaytu_account_id as kaytu_account_id,
      s.kaytu_resource_id as kaytu_resource_id,
      case
        when ssl_enforcement = 'Disabled' then 'alarm'
        else 'ok'
      end as status,
      case
        when ssl_enforcement = 'Disabled' then name || ' SSL connection disabled.'
        else name || ' SSL connection enabled.'
      end as reason
      
      , s.resource_group as resource_group
      , sub.display_name as subscription
    from
      azure_postgresql_server s,
      azure_subscription sub
    where
      sub.subscription_id = s.subscription_id;
Severity: medium
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - 4.3.1
  cis_level:
  - "1"
  cis_section_id:
  - "4.3"
  cis_type:
  - automated
  cis_version:
  - v1.3.0
  plugin:
  - azure
  service:
  - Azure/PostgreSQL
  x-kaytu-explanation:
  - |-
    Azure Database for PostgreSQL uses Secure Sockets Layer (SSL) encryption to secure the connection between your client and your database server. To enable SSL connections on your Azure Database for PostgreSQL, you can require SSL by setting your connection string in the following way:

    ```markup
    Server={your_server_name}.postgres.database.azure.com;Database={your_database_name};Port=5432;User Id={your_user_name};Password={your_password};SSL Mode=Require;
    ```

    In the connection string above, the `SSL Mode` parameter is set to `Require` which means the client will connect to the server via SSL. 

    You need to replace `{your_server_name}`, `{your_database_name}`, `{your_user_name}`, and `{your_password}` with your actual PostgreSQL server details. 

    Keep in mind that SSL encryption adds an extra layer of overhead, so connection times may be slightly longer. However, this generally results in a more secure communication channel.
  x-kaytu-noncompliance-cost:
  - |-
    Non-compliance to enabling SSL connection on PostgreSQL servers in Azure can lead to significant costs and potential risks, including but not limited to:

    1. **Security Risk:** Without SSL, data transmitted between the server and client can be intercepted and compromised by hackers. This can lead to unauthorized access or data theft.

    2. **Monetary Loss:** Data breaches can lead to significant financial losses, from regulatory fines and repairs to reputational damage that impacts the customer base and revenue.

    3. **Violation of Compliance Regulations:** Many regulations (like GDPR, PCI DSS, etc.) require certain types of data to be encrypted during transmission. Non-compliance could force the organization to pay hefty fines and penalties.

    4. **Loss of Trust:** If customers find out their data has been handled with inadequate security, it can lead to loss of trust and potential customer attrition.

    5. **Breach of Contract:** Some business contracts necessitate strict data handling and security requirements. Non-compliance could result in loss of business and potential legal repercussions.

    Inclusive, ensuring SSL connection enables the PostgreSQL Servers to ensure data integrity, data privacy and server authentication.
  x-kaytu-usefulness-example:
  - |
    Secure Sockets Layer, also known as SSL, is a security protocol that provides a secure channel between two machines or devices operating over the internet or an internal network. Enabling SSL connection on PostgreSQL Servers might be useful in cases such as working in a financial industry where handling sensitive data and its associated encryption is a top priority. Here's an example:

    ```markdown
    John is a database engineer working for a financial firm. His company requires all data transfers to be encrypted due to the sensitive nature of their customer's financial data. John uses Azure's PostgreSQL Servers to manage the company's databases.

    To secure these data transfers, John can enable SSL connections on the PostgreSQL servers. This will ensure that the data being exchanged between their internal servers and Azure's PostgreSQL Servers cannot be read or tampered with. The information is secured, ensuring the privacy and reliability of their customer's highly sensitive financial data.

    To enable SSL connections, he follows these steps:
    1. Open the Azure portal and navigate to the PostgreSQL Server.
    2. On the server's Overview page, click on "Connection security".
    3. Under "SSL settings", toggle to "Enable".

    By enabling SSL connection on Azure's PostgreSQL Servers, John ensures that his company adheres to the stringent security requirements enforced by financial regulatory authorities. And thus, ensuring the trust of their customers.
    ```
Title: Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server
