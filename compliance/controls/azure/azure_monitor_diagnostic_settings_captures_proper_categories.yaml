Description: Enable Diagnostic settings for exporting activity logs. Diagnostic setting are available for each individual resources within a subscription. Settings should be configured for all appropriate resources for your environment.
DocumentURI: ""
ID: azure_monitor_diagnostic_settings_captures_proper_categories
Managed: true
ManualVerification: false
Query:
  Connector: Azure
  Engine: odysseus-v0.0.1
  ListOfTables:
  - azure_diagnostic_setting
  - azure_subscription
  PrimaryTable: azure_diagnostic_setting
  QueryToExecute: |
    with enabled_settings as (
      select
        name,
        id,
        kaytu_account_id as kaytu_account_id,
        kaytu_resource_id as kaytu_resource_id,
        _ctx,
        resource_group,
        subscription_id,
        count(*) filter (where l ->> 'enabled' = 'true'
          and l ->> 'category' in ('Administrative', 'Security', 'Alert', 'Policy')
        ) as valid_category_count,
        string_agg(l ->> 'category', ', ') filter (where l ->> 'enabled' = 'true'
          and l ->> 'category' in ('Administrative', 'Security', 'Alert', 'Policy')
        ) as valid_categories
      from
        azure_diagnostic_setting,
        jsonb_array_elements(logs) as l
      group by
        name,
        id,
        kaytu_account_id,
        kaytu_resource_id,
        _ctx,
        resource_group,
        subscription_id
    )
    select
      sett.id as resource,
      sett.kaytu_account_id as kaytu_account_id,
      sett.kaytu_resource_id as kaytu_resource_id,
      case
        when valid_category_count = 4 then 'ok'
        else 'alarm'
      end as status,
      case
        when valid_category_count = 4
          then name || ' logs enabled for required categories administrative, security, alert and policy.'
        when valid_category_count > 0
          then sett.name || ' logs enabled for ' || valid_categories || ' categories.'
          else sett.name || ' logs not enabled for categories administrative, security, alert and policy.'
      end as reason
      , sett.resource_group as resource_group
      , sub.display_name as subscription
    from
      enabled_settings sett,
      azure_subscription sub
    where
      sub.subscription_id = sett.subscription_id;
Severity: medium
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - 5.1.2
  cis_level:
  - "1"
  cis_section_id:
  - "5.1"
  cis_type:
  - automated
  cis_version:
  - v1.3.0
  plugin:
  - azure
  service:
  - Azure/Monitor
  x-kaytu-explanation:
  - "**Azure Control: Enable Diagnostic Settings for Exporting Activity Logs**\n\n*Description:*\n\nAzure provides Diagnostic Settings that allow you to export activity logs for each individual resource within a subscription. This control focuses on enabling these settings to ensure proper monitoring and auditing of activities in your Azure environment.\n\n*Implementation Instructions:*\n\n1. **Scope:** Apply diagnostic settings for each relevant resource within your subscription.\n\n2. **Configuration Steps:**\n   - Access the Azure Portal or use Azure CLI/Powershell commands.\n   - Navigate to each resource that requires diagnostic settings.\n   - Configure diagnostic settings for activity logs on each resource.\n   - Ensure settings are appropriately tuned based on your monitoring and auditing requirements.\n\n3. **Validation:**\n   - Verify that diagnostic settings are successfully configured for all targeted resources.\n   - Check that activity logs are being exported to the specified destination (e.g., Azure Storage Account, Log Analytics workspace).\n\n4. **Periodic Review:**\n   - Regularly review and update diagnostic settings to align with changing monitoring needs.\n   - Ensure that new resources are configured with the necessary diagnostic settings.\n\n*Compliance Check:*\n\n- Regularly audit and verify that diagnostic settings are enabled for all relevant resources within the Azure subscription.\n\n*Note:*\nAdjust the configuration steps based on your specific environment and compliance requirements. Regularly update this control to align with Azure best practices and any changes in your monitoring strategy.\n"
  x-kaytu-noncompliance-cost:
  - "**Cost of Non-Compliance:**\n\n1. **Security Risks:**\n   - Unauthorized access and activities may go unnoticed without proper logging.\n   - Security incidents might not be detected in a timely manner, leading to potential data breaches.\n\n2. **Compliance Violations:**\n   - Failure to export activity logs can lead to non-compliance with regulatory requirements and industry standards.\n   - Audits and assessments may identify the lack of proper logging, resulting in penalties or legal consequences.\n\n3. **Operational Challenges:**\n   - Troubleshooting and diagnosing issues becomes more difficult without detailed activity logs.\n   - Lack of visibility into resource activities may impact the efficiency of operational processes.\n\n4. **Missed Insights:**\n   - Important insights into resource usage, performance, and changes may be missed.\n   - Proactive monitoring and optimization opportunities may be lost without comprehensive activity logs.\n\n5. **Increased Response Time:**\n   - Identifying the root cause of issues and responding to incidents may take longer.\n   - Lack of detailed logs can extend the time required to restore services to normal operation.\n\n6. **Limited Forensic Analysis:**\n   - In the event of a security incident, forensic analysis becomes challenging without detailed activity logs.\n   - Investigating and understanding the timeline of events may be hindered.\n"
  x-kaytu-usefulness-example:
  - "To enable diagnostic settings for exporting activity logs in Azure, you can use Azure Resource Manager (ARM) templates to define the infrastructure as code. Below is an example instance in JSON format for an ARM template that enables diagnostic settings for exporting activity logs for a hypothetical Azure Storage Account:\n\njson\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2019-06-01\",\n      \"name\": \"mystorageaccount\",\n      \"location\": \"East US\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\",\n        \"tier\": \"Standard\"\n      },\n      \"kind\": \"StorageV2\",\n      \"properties\": {\n        \"accessTier\": \"Hot\"\n      },\n      \"resources\": [\n        {\n          \"type\": \"Microsoft.Storage/storageAccounts/providers/diagnosticSettings\",\n          \"name\": \"default\",\n          \"apiVersion\": \"2017-05-01-preview\",\n          \"dependsOn\": [\n            \"[resourceId('Microsoft.Storage/storageAccounts', 'mystorageaccount')]\"\n          ],\n          \"properties\": {\n            \"workspaceId\": \"[parameters('workspaceId')]\",\n            \"logs\": [\n              {\n                \"category\": \"StorageRead\",\n                \"enabled\": true,\n                \"retentionPolicy\": {\n                  \"enabled\": false,\n                  \"days\": 0\n                }\n              },\n              {\n                \"category\": \"StorageWrite\",\n                \"enabled\": true,\n                \"retentionPolicy\": {\n                  \"enabled\": false,\n                  \"days\": 0\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"parameters\": {\n    \"workspaceId\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"ID of the Log Analytics workspace to which diagnostics logs will be sent.\"\n      }\n    }\n  }\n}\nIn this example:\n\nWe are defining a Storage Account (mystorageaccount) with diagnostic settings enabled.\nThe workspaceId parameter is used to specify the Log Analytics workspace where the diagnostics logs will be sent.\nDiagnostic settings are configured for both \"StorageRead\" and \"StorageWrite\" categories.\nThe retention policy is set to retain logs indefinitely, but you can adjust the retentionPolicy section as needed.\nThis ARM template can be deployed using the Azure Portal, Azure CLI, or any other deployment tool that supports ARM templates. It ensures that diagnostic settings for exporting activity logs are configured for the specified Storage Account."
Title: Ensure Diagnostic Setting captures appropriate categories
