{
  "ID": "azure_monitor_log_alert_create_update_security_solution",
  "Title": "Ensure that Activity Log Alert exists for Create or Update Security Solution",
  "Description": "Create an activity log alert for the Create or Update Security Solution event.",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_log_alert",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_log_alert",
    "QueryToExecute": "with alert_rule as (\n  select\n    alert.id as alert_id,\n    alert.name as alert_name,\n    alert.enabled,\n    alert.location,\n    alert.subscription_id\n  from\n    azure_log_alert as alert,\n    jsonb_array_elements_text(scopes) as sc\n  where\n    alert.location = 'Global'\n    and alert.enabled\n    and sc = '/subscriptions/' || alert.subscription_id\n    and (\n      (\n        alert.condition -\u003e 'allOf' @\u003e '[{\"equals\":\"Security\",\"field\":\"category\"}]'\n        and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"resourceType\", \"equals\": \"microsoft.security/securitysolutions\"}]'\n        and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"operationName\", \"equals\": \"Microsoft.Security/securitySolutions/write\"}]'\n      )\n      or\n      (\n        alert.condition -\u003e 'allOf' @\u003e '[{\"equals\":\"Security\",\"field\":\"category\"}]'\n        and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"resourceType\", \"equals\": \"microsoft.security/securitysolutions\"}]'\n        and jsonb_array_length(alert.condition -\u003e 'allOf') = 2\n      )\n    )\n  limit 1\n)\nselect\n  sub.subscription_id as resource,\n  sub.kaytu_account_id as kaytu_account_id,\n  sub.kaytu_resource_id as kaytu_resource_id,\n  case\n    when count(a.subscription_id) \u003e 0 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when count(a.subscription_id) \u003e 0 then 'Activity log alert exists for create or update Security Solution event.'\n    else 'Activity log alert does not exists for create or update Security Solution event.'\n  end as reason\n  \n  , sub.display_name as subscription\nfrom\n  azure_subscription sub\n  left join alert_rule a on sub.subscription_id = a.subscription_id\ngroup by\n  sub.kaytu_account_id,\n  sub.kaytu_resource_id,\n  sub._ctx,\n  sub.subscription_id,\n  sub.display_name;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "medium",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "5.2.7"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "5.2"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.3.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/Monitor"
    ],
    "x-kaytu-explanation": [
      "Activity logs within AWS can help identify and track any changes or updates that are made to your AWS resources. Alerts can be set up to notify you when certain events occur, such as creating or updating a security solution. Here's an explanation of the control in markup format:\n\n```Markdown\n# AWS Control - Create An Activity Log Alert For Create Or Update Security Solution Event\n\n## Part 1: Create Or Update Security Solution\n\n1. Login to AWS Management Console.\n\n2. Navigate to **CloudTrail**.\n\n3. Select **Event history** from the left-hand navigation pane.\n\n4. Click on **Filter events**.\n\n5. Select **Event name** in the first dropdown.\n\n6. Type `CreateSecurityGroup` or `UpdateSecurityGroup` in the text box and press Enter.\n\n## Part 2: Create An Activity Log Alert\n\n1. Go to **CloudWatch Logs**.\n\n2. Click on **Create alarm**.\n\n3. In **Select metric**, navigate to **Log Group Metrics**.\n\n4. Select the appropriate log group.\n\n5. Define the conditions for the alarm.\n\n6. In **Actions**, select an existing SNS topic or create a new one, then add the necessary recipients.\n\n7. Click on **Create Alarm** to finish.\n```\n\nThe first part is about finding the `CreateSecurityGroup` or `UpdateSecurityGroup` events in the AWS CloudTrail. The second part explains how to create an alarm in CloudWatch Logs, which will notify whenever these events occur.\n\n(Note: Substitute `CreateSecurityGroup` or `UpdateSecurityGroup` with the exact event name you are interested in tracking)."
    ],
    "x-kaytu-noncompliance-cost": [
      "Non-compliance to this AWS control might bring about several costs, some of them are:\n\n1. **Security Threats:** Without a well-structured activity log alert, it will be relatively easy for hackers to bypass security protocols. This non-compliance exposes the organization to threats that could compromise sensitive information.\n\n2. **Deviation from industry best practices:** Regularly updating security solutions and creating an activity log for it is considered an industry best practice. Deviating from this norm can compromise the organization's brand reputation.\n\n3. **Delayed threat detection and non-compliance penalties:** Assuming your organization falls under the bracket of one containing highly sensitive information (HIPAA, for example). Regulatory bodies might slap you with hefty penalties and sanction into non-compliance, especially if it's determined that the lack of an activity log contributed to a security breach. This will indirectly increase the cost of cyber insurance cover. It will also lead to delays in detecting and responding to threats, which in turn amplifies potential damage.\n\n4. **Financial losses:** This can occur either through direct theft, regulatory fines, or lawsuits from affected third parties. Non-compliance could potentially allow for successful attacks that could lead to the theft of sensitive and valuable information, leading to substantial financial losses.\n\n5. **Loss of Customer Trust**: If customers find out an organization has suffered a data breach, that can greatly damage the brand's reputation and result in lost business.\n\nTo avoid these costs, an organization should ensure it complies with this AWS control and maintain a comprehensive and proactive security strategy."
    ],
    "x-kaytu-usefulness-example": [
      "This AWS control is particularly useful when trying to maintain the security of your AWS environment. For instance, suppose that your organization has a strict policy about modifying security solutions, and only specific users are authorized to do so. In case, an unidentified or unauthorized user attempts to modify or update any security solution, this control would create an activity log alert.\n\nExample: \n\n```\nA company, ABC Corp., has a rule that only security admins can update or change security solutions. However, one day, a non-admin employee tries to create a new security solution. The AWS control set in the company's environment triggers an alert for this event. \n\nThis immediately notifies the security team about the unexpected and possibly malicious activity. They are able to quickly revert the changes done by the unauthorized user and further investigate the matter. They might decide to increase security measures, provide further training to the employees, or even take disciplinary measures based on their findings.\n```\n\nThis example shows the usefulness of creating an activity log alert for the 'Create or Update Security Solution' event, as it helps monitor and manage changes to security solutions, thereby maintaining the organization's security posture."
    ]
  },
  "Managed": true
}