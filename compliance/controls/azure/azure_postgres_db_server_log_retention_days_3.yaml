Description: Enable log_retention_days on PostgreSQL Servers.
DocumentURI: ""
ID: azure_postgres_db_server_log_retention_days_3
Managed: true
ManualVerification: false
Query:
  Connector: Azure
  Engine: odysseus-v0.0.1
  ListOfTables:
  - azure_postgresql_server
  - azure_subscription
  PrimaryTable: azure_postgresql_server
  QueryToExecute: |
    select
      s.id as resource,
      s.kaytu_account_id as kaytu_account_id,
      s.kaytu_resource_id as kaytu_resource_id,
      case
        when (config -> 'ConfigurationProperties' ->> 'value')::integer <= 3 then 'alarm'
        else 'ok'
      end as status,
      case
        when (config -> 'ConfigurationProperties' ->> 'value')::integer <= 3 then s.name || ' log files are retained for 3 days or lesser.'
        else s.name || ' log files are retained for more than 3 days.'
      end as reason
      
      , s.resource_group as resource_group
      , sub.display_name as subscription
    from
      azure_postgresql_server s,
      jsonb_array_elements(server_configurations) as config,
      azure_subscription sub
    where
      config ->> 'Name' = 'log_retention_days'
      and sub.subscription_id = s.subscription_id;
Severity: medium
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - 4.3.7
  cis_level:
  - "1"
  cis_section_id:
  - "4.3"
  cis_type:
  - automated
  cis_version:
  - v1.3.0
  plugin:
  - azure
  service:
  - Azure/PostgreSQL
  x-kaytu-explanation:
  - "`log_retention_days` is a parameter for PostgreSQL Servers deployed in Azure. This parameter is used to specify the number of days that the logs are kept in the server. After this period, the logs will be deleted automatically.\n\nIt's essential to enable this setting to prevent running out of disk space due to large log files while ensuring historical log data are avilable for a sensible duration for tasks like diagnostics and troubleshooting.\n\nYou can enable `log_retention_days` in Azure portal or by using Azure CLI, PowerShell, etc. Unfortunately, there's no direct markup (like XML, JSON or YAML) to manage this configuration.\n\nHere is an example of Azure CLI code:\n\n```bash\naz postgres server configuration set \\\n    --resource-group myresourcegroup \\\n    --server-name mydemoserver \\\n    --name log_retention_days \\\n    --value 7\n```\n\nIn the above code:\n\n- `az postgres server configuration set`: This is the command to change the configuration of a PostgreSQL server.\n- `--resource-group myresourcegroup`: This is to specify the resource group.\n- `--server-name mydemoserver`: This is to specify the server name.\n- `--name log_retention_days`: This indicates that we want to change the `log_retention_days` configuration.\n- `--value 7`: This is to specify the number of days for log retention.\n\nAfter running this command, your PostgreSQL server will keep logs for 7 days."
  x-kaytu-noncompliance-cost:
  - "Non-compliance to enabling `log_retention_days` on PostgreSQL Servers in Azure has several potential costs:\n\n1. **Operational costs**: Not retaining logs may result in a lack of valuable historical data that could help in troubleshooting, identifying operational patterns and trends, capacity planning, and auditing.\n\n2. **Security costs**: Logs contain critical security relevant information. Without logs, an organization or individual cannot fully identify or understand malicious behaviour, security incidents or insider threats. This can make it easier for malicious actors to exploit systems undetected, potentially resulting in fines, penalties, or damage to reputation.\n\n3. **Regulatory/Compliance costs**: Many industries are subject to regulations that require log retention for a certain amount of time. Examples include GDPR in the EU or HIPAA in the healthcare sector in the U.S.. Failure to comply with such requirements can result in hefty penalties and fines.\n\n4. **Forensic costs**: Logs are an important part of any incident investigation. If logs are not retained, it may be difficult or even impossible to trace back and understand how a particular incident occurred, making it hard to prevent similar incidents in the future.\n\nNot enabling `log_retention_days` on PostgreSQL servers not only increases the risk exposure for businesses, but can also result in direct financial loss due to regulatory fines and penalties, and indirect losses, due to damage to brand image and reputation after a security incident. \n\nLastly, the cost of non-compliance may also depend on the specific context of the PostgreSQL server. For instance, servers hosting critical data or running business-critical applications may entail higher costs of non-compliance compared to less critical systems."
  x-kaytu-usefulness-example:
  - |-
    Azure Control feature 'log_retention_days' allows setting the number of days to retain the logs on the PostgreSQL servers before deleting them. This feature is useful when you need to run post-mortem after an incident occurs but can't do it right away. For instance, in a scenario when a data breach happens, it may take more than a day to detect and respond. By enabling 'log_retention_days', you ensure that you have access to the relevant server logs during your investigation. 

    Here is an example of how the setting can be implemented in markup format:

    ```yaml
    resource "azurerm_postgresql_server" "example" {
      name                  = "example-psqlserver"
      location              = azurerm_resource_group.example.location
      resource_group_name   = azurerm_resource_group.example.name
      sku_name              = "GP_Gen5_4"
      storage_mb            = 5120
      backup_retention_days = 7
      geo_redundant_backup_enabled = false
      auto_grow_enabled            = true
      administrator_login          = "psqladminun"
      administrator_login_password = "H@Sh1CoR3!"
      version                      = "9.5"
      ssl_enforcement_enabled      = true
      log_retention_days           = 14
    }
    ```
    In this example, logs of the PostgreSQL server named 'example-psqlserver' will be retained for 14 days before deleting them. This ensures a 2-week window for incident detection and response.
Title: Ensure server parameter 'log_retention_days' is greater than 3 days for PostgreSQL Database Server
