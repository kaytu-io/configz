{
  "ID": "azure_network_security_group_https_access_restricted",
  "Title": "Ensure that HTTP(S) access from the Internet is evaluated and restricted ",
  "Description": "Network security groups should be periodically evaluated for port misconfigurations. Where certain ports and protocols may be exposed to the Internet, they should be evaluated for necessity and restricted wherever they are not explicitly required and narrowly configured.",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_network_security_group",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_network_security_group",
    "QueryToExecute": "with network_sg as (\n  select distinct\n    name sg_name\n  from\n    azure_network_security_group nsg,\n    jsonb_array_elements(security_rules) sg,\n    jsonb_array_elements_text(sg -\u003e 'properties' -\u003e 'destinationPortRanges' || (sg -\u003e 'properties' -\u003e 'destinationPortRange') :: jsonb) dport,\n    jsonb_array_elements_text(sg -\u003e 'properties' -\u003e 'sourceAddressPrefixes' || (sg -\u003e 'properties' -\u003e 'sourceAddressPrefix') :: jsonb) sip\n  where\n    sg -\u003e 'properties' -\u003e\u003e 'access' = 'Allow'\n    and sg -\u003e 'properties' -\u003e\u003e 'direction' = 'Inbound'\n    and sg -\u003e 'properties' -\u003e\u003e 'protocol' ilike 'TCP'\n    and sip in\n    (\n      '*',\n      '0.0.0.0',\n      '0.0.0.0/0',\n      'Internet',\n      'any',\n      '\u003cnw\u003e/0',\n      '/0'\n    )\n    and\n    (\n      dport in\n      (\n        '80',\n        '*'\n      )\n      or\n      (\n        dport like '%-%'\n        and split_part(dport, '-', 1) :: integer \u003c= 80\n        and split_part(dport, '-', 2) :: integer \u003e= 80\n      )\n    )\n)\nselect\n  sg.id resource,\n  sg.kaytu_account_id as kaytu_account_id,\n  sg.kaytu_resource_id as kaytu_resource_id,\n  case\n    when nsg.sg_name is null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when nsg.sg_name is null then sg.title || ' restricts HTTPS access from internet.'\n    else sg.title || ' allows HTTPS access from internet.'\n  end as reason\n  \n  , sg.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_network_security_group sg\n  left join network_sg nsg on nsg.sg_name = sg.name\n  join azure_subscription sub on sub.subscription_id = sg.subscription_id;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "high",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "6.4"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "6"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.5.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/Network"
    ],
    "x-kaytu-explanation": [
      "# AWS Control: Periodic Evaluation of Network Security Groups\n\n## Rationale\n\nPeriodically evaluating network security groups for port misconfigurations is an important aspect of maintaining a secure AWS environment. Certain ports and protocols, if exposed to the Internet incorrectly, can create vulnerabilities that attackers can exploit. Thus, it is crucial to ensure that only necessary ports are exposed and that they are correctly configured.\n\n## Control Activities\n\n- **Port Restriction** : This involves regularly reviewing the ports that are opened and determining whether the resources associated with these ports need to be exposed. Unless there is a clear need, restrict the ports to reduce the attack surface.\n  \n- **Protocol Identification** : In addition to restricting unnecessary ports, it is also important to evaluate the protocols in use. Only necessary protocols should be open to prevent potential security issues. \n\n- **Configuration Management** : Maintain a regular schedule to review configurations. Document the reasoning for exposing specific network services, including the business or operational use case. Any changes in the use case should trigger a review of the port or protocol in question.\n\n- **Misconfiguration Audits** : Implement automated tools to detect misconfigurations in real time. AWS offers services like AWS Config that can continuously monitor and assess your AWS resource configurations to ensure they meet your organization's guidelines.\n\n## Implementation\n\nThe checks can be performed either manually or with an automated solution such as AWS Config, AWS Systems Manager, or AWS Trusted Advisor. Custom scripts can also be written to leverage AWS APIs to periodically fetch information about security groups and analyze for any misconfigurations. \n\nRemember to implement necessary change control procedures in your organization to handle any changes in these configurations. Also, consider the effectiveness of your incident response strategy in dealing with any detected misconfigurations.\n\n## References   \n\n- AWS Security Best Practices: [https://aws.amazon.com/whitepapers/aws-security-best-practices/](https://aws.amazon.com/whitepapers/aws-security-best-practices/)\n- AWS Well-Architected Framework - Security Pillar: [https://d1.awsstatic.com/whitepapers/architecture/AWS-Security-Pillar.pdf](https://d1.awsstatic.com/whitepapers/architecture/AWS-Security-Pillar.pdf)"
    ],
    "x-kaytu-noncompliance-cost": [
      "The cost of non-compliance with this AWS control involves various potential risks and failures, including:\n\n1. **Security Breaches:** Insecurely configured security groups can lead to potential security attacks. Hackers or malicious entities usually scan for open ports which they can exploit to gain unauthorized access to the system. Hence, if the security groups are not properly evaluated, it can result in significant cybersecurity threats.\n\n2. **Data Loss/Theft:** With ports unnecessarily exposed to the Internet, the risk of data theft or data loss becomes high. If malicious entities gain access to sensitive information, it could result in severe financial and reputational damage.\n\n3. **Regulatory Compliance Failures:** Non-compliance can lead to failures in meeting certain regulatory or industry-specific data handling and security standards. This could result in fines, legal actions, or loss of certifications, which could seriously jeopardize the business operation.\n\n4. **Service Disruptions:** Port misconfigurations can cause unintended interruptions to services, impacting service availability. This could lead to customer dissatisfaction, tarnishing the company's public image, and potential loss of revenue.\n\n5. **Increased Overhead Costs:** Regular monitoring and incident response take additional resources, and the cost of responding to threats or attacks can be significant.\n\nAdherence to AWS Controls, such as periodic evaluation and restriction of ports and protocols, is crucial to avoid these costs and maintain a secure and reliable system."
    ],
    "x-kaytu-usefulness-example": [
      "For instance, a company, ABC Corp, has an infrastructure setup on AWS with multiple EC2 instances. These instances use various network security groups and security policies, with several ports open for internal and external communication.\n\nAt one point, the company noted some suspicious activities traced back to unanticipated external sources. On investigation, they found that some unnecessary ports were open to the internet, which were supposed to be restricted for internal use only. \n\nBy periodically evaluating their network security groups for possible port misconfigurations, the company could have detected this issue much earlier and mitigated the risk of potential security breaches. After detecting this situation, they modified their security groups to limit the exposure of their vulnerable ports. \n\nHence, the evaluation of network security groups played a crucial role in identifying the misconfigured security rules and tightening the security of their AWS setup."
    ]
  },
  "Managed": true
}