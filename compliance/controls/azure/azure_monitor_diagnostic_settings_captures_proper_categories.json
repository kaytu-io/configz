{
  "ID": "azure_monitor_diagnostic_settings_captures_proper_categories",
  "Title": "Ensure Diagnostic Setting captures appropriate categories",
  "Description": "Enable Diagnostic settings for exporting activity logs. Diagnostic setting are available for each individual resources within a subscription. Settings should be configured for all appropriate resources for your environment.",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_diagnostic_setting",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_diagnostic_setting",
    "QueryToExecute": "with enabled_settings as (\n  select\n    name,\n    id,\n    kaytu_account_id as kaytu_account_id,\n    kaytu_resource_id as kaytu_resource_id,\n    _ctx,\n    resource_group,\n    subscription_id,\n    count(*) filter (where l -\u003e\u003e 'enabled' = 'true'\n      and l -\u003e\u003e 'category' in ('Administrative', 'Security', 'Alert', 'Policy')\n    ) as valid_category_count,\n    string_agg(l -\u003e\u003e 'category', ', ') filter (where l -\u003e\u003e 'enabled' = 'true'\n      and l -\u003e\u003e 'category' in ('Administrative', 'Security', 'Alert', 'Policy')\n    ) as valid_categories\n  from\n    azure_diagnostic_setting,\n    jsonb_array_elements(logs) as l\n  group by\n    name,\n    id,\n    kaytu_account_id,\n    kaytu_resource_id,\n    _ctx,\n    resource_group,\n    subscription_id\n)\nselect\n  sett.id as resource,\n  sett.kaytu_account_id as kaytu_account_id,\n  sett.kaytu_resource_id as kaytu_resource_id,\n  case\n    when valid_category_count = 4 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when valid_category_count = 4\n      then name || ' logs enabled for required categories administrative, security, alert and policy.'\n    when valid_category_count \u003e 0\n      then sett.name || ' logs enabled for ' || valid_categories || ' categories.'\n      else sett.name || ' logs not enabled for categories administrative, security, alert and policy.'\n  end as reason\n  , sett.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  enabled_settings sett,\n  azure_subscription sub\nwhere\n  sub.subscription_id = sett.subscription_id;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "medium",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "5.1.2"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "5.1"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.3.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/Monitor"
    ],
    "x-kaytu-explanation": [
      "Diagnostic settings in AWS (Amazon Web Services) allow you to export platform logs and metrics for your Azure resources. Whether you're sending telemetry from a solution, an app service, or a virtual machine, you'll be able to monitor all your resources in Azure Monitor. These settings need to be appropriately configured for all relevant resources within your subscription as per your requirement.\n\n```\n# Enable Diagnostic settings for exporting activity logs\n\n[AWS Control](https://docs.aws.amazon.com/)\n  \n- **Goal:** Efficiently identify potential errors or unusual activity.\n- **Description:** Diagnostic setting is an important feature in AWS which needs to be enabled for exporting activity logs. These settings allow you to export platform logs and monitor metrics for your Azure resources. They facilitate efficient identification and debugging of potential issues or unusual activity.\n- **Applicability:** These settings are available for each individual resource within a subscription. The application should be done on all appropriate resources depending on the specifics of your environment.\n- **Benefits:** Implementing these settings provides better insights into the operational health and performance of these resources.\n  \n\u003e **NOTE:** Failure to properly configure diagnostic settings can lead to a lack of transparency regarding resource performance and health, which may hinder effective troubleshooting.\n\n- ***How to Implement?***\n   \n1. Navigate to the resource for which you want to enable diagnostic settings.\n2. In the left pane, click on 'Diagnostic settings'.\n3. On the Diagnostic settings page, click 'Add diagnostic setting'.\n4. Provide necessary details under 'Diagnostic setting' and 'Log' / 'Metric'.\n5. Click 'Save'.\n   \n\u003e **NOTE:** The process may vary slightly depending on the type of resource.\n\nFor more detailed information, you can check [AWS Documentation on Diagnostic Settings](https://docs.aws.amazon.com/).\n```"
    ],
    "x-kaytu-noncompliance-cost": [
      "Non-compliance to this AWS control would imply that you are not enabling Diagnostic settings for exporting activity logs for your resources. This could lead to several potential costs.\n\n1. **Security Risk**: Not having diagnostic settings can mean that any malicious activity or security breaches within your network could go unnoticed. This can potentially lead to huge data breaches, which could cost the company in terms of both damage repair and reputational value.\n\n2. **Operational Inefficiency**: Without detailed log data, operational errors can go unnoticed, or it may take longer time to troubleshoot issues. This lack of visibility can affect your IT operations, causing downtime or significant delays, which in turn can affect your business operations, leading to potential loss of revenue.\n\n3. **Audit and Compliance Failure**: If your organization is subject to regulatory standards, the absence of comprehensive activity logs could result in failing audits or not meeting compliance requirements. This could result in hefty fines and penalties, and in some cases, legal consequences.\n\n4. **Data Loss**: In case of a disaster, without having proper activity logs, you could potentially lose important data due to inability to trace back all activities performed on your resources. This could seriously affect your operations and could lead to associated costs of recovering from such a data loss.\n\n5. **Increased TCO**: Not having proactive diagnostic settings can result in increased total cost of ownership (TCO) for your AWS environment. You could end up spending more time and resources in reactive problem-solving because of decreased visibility into your system.\n\nImplementing and maintaining diagnostic settings for exporting activity logs is crucial for system health, auditing, and troubleshooting purposes. The costs associated with non-compliance can be significantly higher in comparison to the resources needed to enable and maintain these settings."
    ],
    "x-kaytu-usefulness-example": [
      "For instance, let's consider a company that hosts their application on AWS and has several resources such as Amazon EC2 instances, Amazon RDS databases, and AWS S3 buckets. The company needs to detect unauthorized access or modifications to its resources as part of its security controls. \n\nBy enabling diagnostic settings for exporting activity logs, security administrators can track all the activities happening on their resources. \n\nFor example, in case of EC2 instances, these settings can log events such as instances starting or stopping, security group changes, or changes in instance type, which can help them identify any abnormal activities or deviations from the company's policies. \n\nSimilarly, for RDS databases, it can log events like modifications in database instances, security group changes, or snapshot activities, and for S3 buckets, it could provide information on object-level operations (get, put, delete) and even list the APIs being called upon these resources.\n\n`Example:` \n\nNested under an AWS Account, there's a subscription with an EC2 instance named 'i-1234567890abcdef0'. So, to enable diagnostic settings for exporting activity logs of this instance, one could consider the following example in AWS Management Console: \n\n1. Open the EC2 Dashboard.\n2. In the navigation pane, choose 'Instances'.\n3. Select the instance 'i-1234567890abcdef0'.\n4. Choose 'Actions', then 'CloudWatch Monitoring', and finally 'Add/Edit Alarms'.\n5. In the 'Create Alarm' wizard, you can specify settings such as the time period and threshold for the alarm, and assign it an appropriate name (e.g., 'EC2 Activity Log Alarm').\n6. In the 'Actions' section, you can configure the alarm to automatically send a notification when the alarm state changes.\n\nThis way, the administrators will consistently receive real-time updates about the activities on their resources, thereby helping them maintain a secure and well-managed cloud infrastructure."
    ]
  },
  "Managed": true
}