{
  "ID": "azure_keyvault_logging_enabled",
  "Title": "Ensure that logging for Azure KeyVault is 'Enabled'",
  "Description": "Enable AuditEvent logging for key vault instances to ensure interactions with key vaults are logged and available.",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_key_vault",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_key_vault",
    "QueryToExecute": "with logging_details as (\n  select\n    name as key_vault_name\n  from\n    azure_key_vault,\n    jsonb_array_elements(diagnostic_settings) setting,\n    jsonb_array_elements(setting -\u003e 'properties' -\u003e 'logs') log\n  where\n    diagnostic_settings is not null\n    and setting -\u003e 'properties' -\u003e\u003e 'storageAccountId' \u003c\u003e ''\n    and (log -\u003e\u003e 'enabled') :: boolean\n    and log -\u003e\u003e 'category' = 'AuditEvent'\n    and (log -\u003e 'retentionPolicy') :: JSONB ? 'days'\n)\nselect\n  v.id as resource,\n  v.kaytu_account_id as kaytu_account_id,\n  v.kaytu_resource_id as kaytu_resource_id,\n  case\n    when v.diagnostic_settings is null then 'alarm'\n    when l.key_vault_name not like concat('%', v.name, '%') then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when v.diagnostic_settings is null then v.name || ' logging not enabled.'\n    when l.key_vault_name not like concat('%', v.name, '%') then v.name || ' logging not enabled.'\n    else v.name || ' logging enabled.'\n  end as reason\n  \n  , v.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_key_vault v,\n  logging_details l,\n  azure_subscription sub\nwhere\n  sub.subscription_id = v.subscription_id;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "high",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "5.1.5"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "5.1"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.3.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/KeyVault"
    ],
    "x-kaytu-explanation": [
      "AWS Control is a set of governance and compliance practices that AWS recommends to secure your environment, protect data, and streamline operations. One such control is to enable AuditEvent logging, specifically for key vault instances.\n\n```\n# AWS Control - Enable AuditEvent Logging for Key Vault Instances\n\nThe AWS Key Management Service (KMS) enables you to create and manage cryptographic keys, often referred to as key vaults, which you can use to encrypt and decrypt data.\n\nTo ensure the security and traceability of interactions with these key vaults, AWS recommends enabling AuditEvent logging. This will log all events where these keys are accessed, used, or modified.\n\nEnabling this control involves two main steps:\n\n## Step 1: Enable CloudTrail Logging\n\n```shell\naws cloudtrail create-trail --name MyTrail --s3-bucket-name myBucket --is-multi-region-trail\n\naws cloudtrail start-logging --name MyTrail\n```\n\nThis will create a trail named 'MyTrail', log all regional AWS API calls, and deliver the log files to the S3 bucket named 'myBucket'.\n\n## Step 2: Enable AuditEvent Logging for Key Vault\n\nUse the Amazon CloudTrail service to monitor the AWS KMS actions. CloudTrail captures API calls for AWS KMS and delivers log files.\n\nRefer to [AWS KMS CloudTrail logging documentation](https://docs.aws.amazon.com/kms/latest/developerguide/logging-using-cloudtrail.html) for further details on enabling this.\n\nRemember that specific permissions may be required to enable these functionalities. Always follow the **Principle of Least Privilege (PoLP)**, granting only the necessary access to perform a function.\n\nThis control ensures that all interactions with your key vaults are logged and can be audited later if required, providing a robust data access audit trail.\n```"
    ],
    "x-kaytu-noncompliance-cost": [
      "Non-compliance with this AWS (Amazon Web Services) control, specifically not enabling AuditEvent logging for key vault instances, can result in several costs, both tangible and intangible:\n\n1. **Data Breach Costs**: Without proper audit logs, unauthorized access or manipulation of data within your key vaults could go unnoticed. If such breaches result in loss or compromise of sensitive data, you could face financial penalties and costs associated with the clean-up, notification, reparations, and potential lawsuits.\n\n2. **Compliance Fines**: If your business operates within a regulated industry (such as healthcare or finance), failure to maintain and provide audit logs could result in hefty fines and penalties from regulatory bodies.\n\n3. **Business Continuity**: AuditEvent logs are vital for troubleshooting and identifying issues that could impact service or system uptime. Without them, issue resolution could take longer, potentially causing service disruption which could impact revenue.\n\n4. **Audit Failures**: External audits form an important part of many businesses' compliance programs. An inability to provide adequate audit logs could result in audit failures, leading to financial penalties and potential loss of business or reputation if certifications are lost.\n\n5. **Investigation and Forensics Costs**: In the event of a security incident, audit logs provide vital information to understand what happened. Without these logs, security investigations could be harder, time consuming and more expensive.\n\n6. **Loss of Customer Trust**: If a security incident do occur and it turns out the business wasn't maintaining proper audit logs, it could lead to significant damage to the reputation of the business, resulting in loss of customer trust and business opportunities. \n\n7. **Potential Cloud Service Provider Actions**: If the lack of proper security controls, such as audit logging, violates terms of services, AWS itself may choose to take punitive action, including, but not limited to, service suspension. \n\nThus, not enabling AuditEvent logging on key vault instances can have substantial negative impact on a business's finances, reputation, operations, and potentially violate regulatory and service agreement requirements."
    ],
    "x-kaytu-usefulness-example": [
      "For instance, a company X is offering its services in the form of different software applications to clients. These applications contain private client's data. To make sure all information is secure, the company uses AWS Key Vaults to store encryption keys that are used to encrypt/decrypt sensitive data.\n\nHowever, malicious activities may occur from either outside or within the organization. To keep control over access and activities performed on these Key Vaults, company X enables AuditEvent logging for AWS Key Vaults. \n\nFor instance, if any authorized or unauthorized individual accesses the key vault, an event is logged. Later, a sudden increase in access requests to key vaults is noticed. The AWS AuditEvent logging set up by the company allows them to trace all these access requests back to the original IP addresses. \n\nThis feature enables them to identify whether it's an insider job or an external breach, allowing them to take appropriate actions to prevent any data loss or breaches, therefore maintaining the security and integrity of their client's data."
    ]
  },
  "Managed": true
}