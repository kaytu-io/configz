Description: Enable log_checkpoints on PostgreSQL Servers.
DocumentURI: ""
ID: azure_postgres_db_server_log_checkpoints_on
Managed: true
ManualVerification: false
Query:
  Connector: Azure
  Engine: odysseus-v0.0.1
  ListOfTables:
  - azure_postgresql_server
  - azure_subscription
  PrimaryTable: azure_postgresql_server
  QueryToExecute: |
    select
      s.id as resource,
      s.kaytu_account_id as kaytu_account_id,
      s.kaytu_resource_id as kaytu_resource_id,
      case
        when lower(config -> 'ConfigurationProperties' ->> 'value') != 'on' then 'alarm'
        else 'ok'
      end as status,
      case
        when lower(config -> 'ConfigurationProperties' ->> 'value') != 'on' then s.name || ' server parameter log_checkpoints off.'
        else s.name || ' server parameter log_checkpoints on.'
      end as reason
      
      , s.resource_group as resource_group
      , sub.display_name as subscription
    from
      azure_postgresql_server s,
      jsonb_array_elements(server_configurations) config,
      azure_subscription sub
    where
      config ->> 'Name' = 'log_checkpoints'
      and sub.subscription_id = s.subscription_id;
Severity: medium
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - 4.3.3
  cis_level:
  - "1"
  cis_section_id:
  - "4.3"
  cis_type:
  - automated
  cis_version:
  - v1.3.0
  plugin:
  - azure
  service:
  - Azure/PostgreSQL
  x-kaytu-explanation:
  - "In Azure, you can enable or disable the log_checkpoints setting on your Azure Database for PostgreSQL server using the Azure portal, Azure CLI, or Azure PowerShell. This feature provides visibility into checkpoint activity and how it impacts the performance of your database. \n\nHere's how you can do it in a markup format such as in Azure CLI:\n\n```sh\naz postgres server configuration set \\\n    --resource-group [your-resource-group] \\\n    --server-name [your-server-name] \\\n    --name log_checkpoints \\\n    --value on\n```\nIn the command line above,\n\n- Replace `[your-resource-group]` with the name of your resource group.\n- Replace `[your-server-name]` with the name of your PostgreSQL server.\n- The `--name` option is used to specify the setting name which is 'log_checkpoints' in this case.\n- The `--value on` will enable the log_checkpoints setting.\n\nPlease note that, to apply the change, a server restart might be necessary."
  x-kaytu-noncompliance-cost:
  - "Non-compliance to the Azure Control of enabling log_checkpoints on PostgreSQL Servers can have significant cost implications in several aspects:\n\n1. **Operational Efficiency Costs**: Logs of every checkpoint that a system reaches are crucial for debugging and auditing purposes. Without activating this feature, the developers or IT administrators may lack critical information needed to troubleshoot issues, causing delays and inefficiencies in operations due to an increase in the time taken to resolve defects and problems.\n\n2. **Data Security Costs**: Checkpoints in PostgreSQL are points in time where all data files are consistent. They are vital for data recovery in cases such as system crashes or other unexpected shutdowns. If log_checkpoints isn't enabled, the ability to recover lost or corrupted data could be compromised, leading to potential loss of sensitive or critical data.\n\n3. **Compliance and Regulatory Costs**: For industries that are heavily regulated (e.g., healthcare, financial services), compliance with data integrity and security standards is obligatory. Failure to enable log_checkpoints could lead to non-compliance with these standards, resulting in hefty penalties and fines.\n\n4. **Reputational Costs**: Any potential data loss or breach due to non-compliance can cause significant damage to a business's reputation, leading to loss of customer trust and potential reduction in market shares.\n\nTherefore, non-compliance with the Azure Control of enabling the log_checkpoints on PostgreSQL Servers may lead not only to operational difficulties but also potentially severe financial implications."
  x-kaytu-usefulness-example:
  - "This Azure control allows developers and administrators to track and monitor all changes and operations on their PostgreSQL databases. \n\nFor example, a web development company uses Azure for hosting their client's PostgreSQL databases. Lately, they had some unexpected shutdowns and some data seemed to be missing or corrupted. By enabling log_checkpoints, they were able to track the moments before the unexpected shutdowns. This provided valuable insights that helped them troubleshoot and find the root cause of the problem. The information from logs even helped them to recover part of the lost data. \n\nSo in this instance, this Azure control provided crucial data for problem-solving, data recovery, and preventing further data corruption. \n\n```\n# Markup Format\n```\n# Enable log_checkpoints on PostgreSQL Servers in Azure\n\n## Objectives\n\n1. Log all checkpoints and restart points.\n2. Helps in debugging issues related to checkpoint/restart points.\n\n## Prerequisites\n\n1. PostgreSQL server in Azure.\n2. Superuser or similar privileges.\n\n## Steps \n\n1. Connect to PostgreSQL server.\n2. Navigate to PostgreSQL server parameters.\n3. Enable the 'log_checkpoints' parameter.\n\n## Expected Results\n\n1. All checkpoints and restart points will be logged.\n2. Logs can be used for debugging.\n```\n```"
Title: Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server
