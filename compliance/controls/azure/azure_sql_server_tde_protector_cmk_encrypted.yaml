Description: Based on business needs or criticality of data/databases hosted a SQL server, it is recommended that the TDE protector is encrypted by a key that is managed by the data owner (Customer-managed key)
DocumentURI: ""
ID: azure_sql_server_tde_protector_cmk_encrypted
Managed: true
ManualVerification: false
Query:
  Connector: Azure
  Engine: odysseus-v0.0.1
  ListOfTables:
  - azure_sql_server
  - azure_subscription
  PrimaryTable: azure_sql_server
  QueryToExecute: |
    select
      s.id as resource,
      s.kaytu_account_id as kaytu_account_id,
      s.kaytu_resource_id as kaytu_resource_id,
      case
        when encryption ->> 'kind' = 'servicemanaged' then 'alarm'
        else 'ok'
      end as status,
      case
        when encryption ->> 'kind' = 'servicemanaged' then s.name || ' TDE protector not encrypted with CMK.'
        else s.name || ' TDE protector encrypted with CMK.'
      end as reason
      
      , s.resource_group as resource_group
      , sub.display_name as subscription
    from
      azure_sql_server s,
      jsonb_array_elements(encryption_protector) encryption,
      azure_subscription sub
    where
      sub.subscription_id = s.subscription_id;
Severity: high
Tags:
  category:
  - Compliance
  cis:
  - "true"
  cis_item_id:
  - "4.5"
  cis_level:
  - "2"
  cis_section_id:
  - "4"
  cis_type:
  - automated
  cis_version:
  - v1.3.0
  plugin:
  - azure
  service:
  - Azure/SQL
  x-kaytu-explanation:
  - "Azure SQL Database Transparent Data Encryption (TDE) with Bring Your Own Key (BYOK) support provides control over the management and access to a key that's used to encrypt your data.\n\nIn SQL Server, Transparent Data Encryption (TDE) is used to encrypt the storage of an entire database by using a symmetric key called the database encryption key. To protect this data encryption key in Azure, a TDE protector is used, which is a certificate stored in Azure Key Vault.\n\nIf your business handles sensitive or critical data, it's important to manage access and control to this key. By default, Microsoft manages this key. But you can choose to manage it yourself. This is called a Customer-managed key. \n\nBelow is an example of how to specify the customer-managed key for TDE in your Azure SQL server in an Azure Resource Manager template:\n\n```markdown\n{\n    \"resources\": [\n        {\n            \"name\": \"myserver\",\n            \"type\": \"Microsoft.Sql/servers\",\n            \"apiVersion\": \"2020-02-02-preview\",\n            \"properties\": {\n                \"transparentDataEncryption\": {\n                    \"properties\": {\n                        \"status\": \"Enabled\",\n                        \"keyId\": \"/subscriptions/{SubscriptionID}/resourceGroups/{ResourceGroupName}/providers/Microsoft.KeyVault/vaults/{VaultName}/keys/{KeyName}\"\n                    }\n                }\n            },\n           \"location\": \"West US\"\n        }\n    ]\n}\n```\nIn the above script, replace `{SubscriptionID}`, `{ResourceGroupName}`, `{VaultName}`, and `{KeyName}` with appropriate values. This script will enable TDE and set the key from your specified Key Vault as the TDE protector."
  x-kaytu-noncompliance-cost:
  - |-
    Non-compliance to the Azure control that recommends that the Transparent Data Encryption (TDE) protector be encrypted by a key that is managed by the data owner (Customer-managed key) can lead to several potential losses or costs:

    1. **Security Risks:** Using service-managed keys does not provide the same level of control and security as using customer-managed keys. It can lead to vulnerabilities and potential data breaches.

    2. **Regulatory Non-Compliance:** There are numerous industry and government regulations that mandate strict control and management of encryption keys. Non-compliance could result in heavy fines and penalties.

    3. **Data Ownership Issues:** In cases where there is a dispute or hindrance with Azure, data ownership and access can potentially be compromised or delayed if encryption keys are not managed by the data owner.

    4. **Reputation Damage:** A data breach can cause significant damage to the reputation of a business, leading to loss of customer trust and potential business.

    Thus, the cost of non-compliance can be significant both in terms of finances and reputation due to potential security breaches, regulatory penalties, issues with data ownership, and loss of trust. Ensuring compliance is key to safeguard data integrity and maintain trust with clients and regulatory bodies.
  x-kaytu-usefulness-example:
  - |-
    Imagine a scenario where a financial incorporation holds and processes critical and sensitive data related to its business operations and customers. This data could include client account information, transactional data, financial report etc., all stored in SQL servers. The inadvertent exposure or breach of such data could result in business loss, compromise clients' trust and contravene data protection regulations.

    Utilizing Azure's TDE protector encrypted by a Customer-managed key, the company has full management, and control over their encryption keys. In case of a potential data breach, no attacker or unauthorized person can access the data as they would require the specific encryption key, managed by the company itself. 

    This brings in an additional level of security, and peace of mind for the company, where they can assure themselves and their stakeholders that critical data remains highly secure, mitigating serious data-related risks.
Title: Ensure SQL server's TDE protector is encrypted with Customer-managed key
