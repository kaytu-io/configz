{
  "ID": "azure_keyvault_with_non_rbac_secret_expiration_set",
  "Title": "Ensure that the Expiration Date is set for all Secrets in Non-RBAC Key Vaults",
  "Description": "Ensure that all Secrets in Non Role Based Access Control (RBAC) Azure Key Vaults have an expiration time set.",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_key_vault",
      "azure_key_vault_secret",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_key_vault_secret",
    "QueryToExecute": "with non_rbac_vault as (\n  select\n    name\n  from\n    azure_key_vault\n  where not enable_rbac_authorization\n)\nselect\n  kvs.id as resource,\n  kvs.kaytu_account_id as kaytu_account_id,\n  kvs.kaytu_resource_id as kaytu_resource_id,\n  case\n    when v.name is null then 'skip'\n    when enabled and expires_at is null then 'alarm'\n    else 'ok'\n  end as status,\n  vault_name || ' key ' || kvs.name ||\n  case\n    when v.name is null then ' RBAC enabled vault.'\n    when enabled and expires_at is null then ' expiration date not set.'\n    when not enabled then ' disabled.'\n    else ' expiration date set to ' || to_char(expires_at, 'DD-Mon-YYYY') || '.'\n  end as reason\n  \n  , kvs.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_key_vault_secret kvs\n  left join non_rbac_vault as v on v.name = kvs.vault_name,\n  azure_subscription sub\nwhere\n  sub.subscription_id = kvs.subscription_id;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "high",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "8.4"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "8"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.4.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/KeyVault"
    ],
    "x-kaytu-explanation": [
      "# Azure Key Vault Secrets Expiration Control\n\n## Objective\nEnsure that all secrets in Non Role Based Access Control (RBAC) Azure Key Vaults have an expiration time set.\n\n## Description\nAzure Key Vaults are used to securely store and manage sensitive information, such as passwords and cryptographic keys. To enhance security, it is essential to implement controls that enforce the regular rotation of secrets. This control specifically focuses on secrets stored in Azure Key Vaults that are not governed by Role Based Access Control (RBAC).\n\n## Implementation Steps\n1. Identify Azure Key Vaults without RBAC.\n2. For each identified Key Vault:\n   - Review the existing secrets.\n   - Ensure that each secret has an expiration time set.\n   - Set or update expiration times for secrets that don't have one.\n   - Consider implementing a policy to enforce expiration times for future secrets.\n\n## Verification\nTo verify compliance with this control:\n1. Check each Non-RBAC Azure Key Vault.\n2. Verify that all secrets within these Key Vaults have expiration times set.\n3. Confirm that the policy is in place to enforce expiration times for future secrets.\n\n## Note\nRegularly review and update expiration times for secrets as needed to maintain security compliance.\n"
    ],
    "x-kaytu-noncompliance-cost": [
      "# Azure Control: Ensure Secrets in Non-RBAC Azure Key Vaults have Expiration Time\n\n## Compliance Requirement:\nAll Secrets in Non Role-Based Access Control (RBAC) Azure Key Vaults must have an expiration time set.\n\n## Cost of Non-Compliance:\n\n### 1. **Security Risks:**\n   - **Unauthorized Access:** Without expiration times, secrets may remain active indefinitely, increasing the risk of unauthorized access.\n   - **Extended Exposure:** Prolonged exposure of sensitive information heightens the likelihood of exploitation by malicious actors.\n\n### 2. **Regulatory Penalties:**\n   - **Non-Compliance Fines:** Failure to adhere to security standards may result in regulatory penalties, leading to financial losses.\n\n### 3. **Data Breach Consequences:**\n   - **Data Exposure:** In the event of a breach, sensitive data with no expiration may be compromised, causing reputational damage.\n   - **Legal Consequences:** Non-compliance may lead to legal actions from affected parties, resulting in legal expenses.\n\n### 4. **Operational Impact:**\n   - **Increased Remediation Efforts:** Addressing security incidents and implementing corrective measures without expiration controls can be resource-intensive.\n   - **Disruption to Services:** Security incidents may lead to service disruptions, impacting business operations.\n\n### 5. **Audit Failures:**\n   - **Compliance Audits:** Non-compliance can lead to failure in compliance audits, affecting the organization's ability to operate in regulated environments.\n\n## Recommended Action:\nEnsure that all secrets in Non-RBAC Azure Key Vaults have a defined expiration time, in accordance with security best practices and regulatory requirements.\n\n## Implementation Guidance:\n   - Utilize Azure Key Vault policies to enforce expiration times for secrets.\n   - Regularly review and update expiration times based on security policies and regulatory changes.\n\n## Summary:\nCompliance with the specified control is crucial to mitigate security risks, avoid regulatory penalties, protect against data breaches, maintain operational resilience, and pass compliance audits. Implementing expiration times for secrets is a fundamental step in ensuring a secure and well-managed Azure Key Vault environment.\n"
    ],
    "x-kaytu-usefulness-example": [
      "{\n  \"if\": {\n    \"allOf\": [\n      {\n        \"field\": \"type\",\n        \"equals\": \"Microsoft.KeyVault/vaults/secrets\"\n      },\n      {\n        \"field\": \"Microsoft.KeyVault/vaults/accessPolicies[*].type\",\n        \"notEquals\": \"Microsoft.Authorization/roleAssignments\"\n      }\n    ]\n  },\n  \"then\": {\n    \"effect\": \"auditIfNotExists\",\n    \"details\": {\n      \"type\": \"Microsoft.KeyVault/vaults/secrets\",\n      \"existenceCondition\": {\n        \"allOf\": [\n          {\n            \"field\": \"Microsoft.KeyVault/vaults/secrets/attributes.exp\",\n            \"exists\": false\n          }\n        ]\n      }\n    }\n  }\n}\n"
    ]
  },
  "Managed": true
}