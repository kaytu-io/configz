{
  "ID": "azure_monitor_log_alert_delete_sql_servers_firewall_rule",
  "Title": "Ensure that Activity Log Alert exists for Delete SQL Server Firewall Rule",
  "Description": "Create an activity log alert for the 'Delete SQL Server Firewall Rule.'",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_log_alert",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_log_alert",
    "QueryToExecute": "with alert_rule as(\n  select\n    alert.id as alert_id,\n    alert.name as alert_name,\n    alert.enabled,\n    alert.location,\n    alert.subscription_id\n  from\n    azure_log_alert as alert,\n    jsonb_array_elements_text(scopes) as sc\n  where\n    alert.location = 'Global'\n    and alert.enabled\n    and sc = '/subscriptions/' || alert.subscription_id\n    and\n    (\n      ( alert.condition -\u003e 'allOf' @\u003e '[{\"equals\":\"Administrative\",\"field\":\"category\"}]'\n      and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"resourceType\", \"equals\": \"microsoft.sql/servers/firewallrules\"}]'\n      and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"operationName\", \"equals\": \"Microsoft.Sql/servers/firewallRules/delete\"}]' )\n      or\n      (\n        alert.condition -\u003e 'allOf' @\u003e '[{\"equals\":\"Administrative\",\"field\":\"category\"}]'\n        and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"resourceType\", \"equals\": \"microsoft.sql/servers/firewallrules\"}]'\n        and jsonb_array_length(alert.condition -\u003e 'allOf') = 2\n      )\n    )\n    limit 1\n)\nselect\n  sub.subscription_id as resource,\n  sub.kaytu_account_id as kaytu_account_id,\n  sub.kaytu_resource_id as kaytu_resource_id,\n  case\n    when count(a.subscription_id) \u003e 0 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when count(a.subscription_id) \u003e 0 then 'Activity Log Alert exists for Delete SQL Server Firewall Rule.'\n    else 'Activity Log Alert does not exists for Delete SQL Server Firewall Rule.'\n  end as reason\n  \n  , sub.display_name as subscription\nfrom\n  azure_subscription sub\n  left join alert_rule a on sub.subscription_id = a.subscription_id\ngroup by\n  sub.kaytu_account_id,\n  sub.kaytu_resource_id,\n  sub._ctx,\n  sub.subscription_id,\n  sub.display_name;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "high",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "5.2.8"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "5.2"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.5.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/Monitor"
    ],
    "x-kaytu-explanation": [
      "AWS does not have a direct feature named \"activity log alert\" for the 'Delete SQL Server Firewall Rule.' But you can achieve it through using AWS CloudTrail combined with AWS CloudWatch and AWS SNS (Simple Notification Service) to monitor and send alerts on specific API activity.\n\nHere's a high-level step-by-step procedure in markdown format:\n\n## Steps to Setup an Alert for 'Delete SQL Server Firewall Rule'\n\n1. **AWS CloudTrail**:\n   - Ensure AWS CloudTrail is enabled in your AWS account to track API usage.\n   - The 'DeleteDBSecurityGroup' event is the one that corresponds to deleting a SQL Server Firewall rule.\n\n2. **AWS CloudWatch**:\n   - Navigate to CloudWatch service in the AWS Console.\n   - Create a new rule and select \"Event Pattern\".\n   - Choose \"Build custom event pattern\".\n   - Then, configure the event pattern. For example:\n    ```JSON\n    {\n        \"source\": [\n            \"aws.rds\"\n        ],\n        \"detail-type\": [\n            \"AWS API Call via CloudTrail\"\n        ],\n        \"detail\": {\n            \"eventSource\": [\n                \"rds.amazonaws.com\"\n            ],\n            \"eventName\": [\n                \"DeleteDBSecurityGroup\"\n            ]\n        }\n    }\n    ```\n2. **Set Up SNS topic for Alerts**:\n   - Create an Amazon SNS topic to send the alert to, e.g., via email.\n   - In the CloudWatch rule you created, set the SNS topic as the target.\n\n3. **Test the Setup**:\n   - Try to delete a SQL Server Firewall rule and check if alert is sent.\n\nPlease ensure you modify the event pattern according to requirements, the above JSON is just an example. In AWS you pay for what you use, so carefully consider logging and notification options to avoid unnecessary costs. \n\nAlso, note the delay that may exist between an API call, it appearing in CloudTrail, and the corresponding CloudWatch rule firing, it might not be real-time.\n\nAlways adhere to AWS security best practices, like least privilege principle etc."
    ],
    "x-kaytu-noncompliance-cost": [
      "Non-compliance to this AWS control can lead to several substantial impacts such as:\n\n1. **Security Breach Risk**: Without an activity log alert for 'Delete SQL Server Firewall Rule', malicious activities or unauthorized deletions may go unnoticed until substantial damage has been done. This creates loopholes for potential breaches where sensitive data can be compromised, affecting the integrity and confidentiality of the system.\n\n2. **Data Loss**: Deletion of firewall rules can expose the SQL databases to risks including data loss. Unauthorized parties could deliberately or accidentally delete important data.\n\n3. **Operational Impedance**: Without such alerts in place, and if a legitimate firewall rule is erroneously deleted, it may disrupt normal operations, causing downtime, inefficiencies and potential loss of business.\n\n4. **Compliance Violations**: For organizations required to adhere to certain compliances (HIPAA, GDPR, etc.), non-compliance to such a control may result in fines or legal penalties related to lack of audit trails or failure to monitor and respond to security events.\n\n5. **Forensic Difficulty**: In the event of a security incident, lack of proper activity logging can make it difficult to perform a forensic investigation to determine what was affected and why.\n\n6. **Additional Costs**: Non-compliance can lead to unexpected costs due to breach remediation, recovery of lost data, legal penalties, and reputational damage.\n\nTherefore, the cost of non-compliance to the AWS control 'Create an activity log alert for the 'Delete SQL Server Firewall Rule'' can be vast and severely impactful to the organization's operations, finance and reputation."
    ],
    "x-kaytu-usefulness-example": [
      "Instance:\n\nA user named \"John\" is administering an organization's AWS resources. He is responsible for monitoring the activities and changes happening in the SQL server. Having an alert system for any changes is necessary for him to ensure the security and integrity of the SQL Server.\n\nOne of the most potentially destructive actions that could occur on the SQL Server is deleting a firewall rule. This could potentially open up the server for unauthorized access or harmful cyber attack.\n\nHere's how the AWS Control - 'Create an activity log alert for the 'Delete SQL Server Firewall Rule' becomes useful:\n\n1. John configures the alert on AWS, specifying the 'Delete SQL Server Firewall Rule' action.\n\n2. An employee named \"Tom\", working in another department, accidentally, out of ignorance or with malicious intent, deletes a firewall rule, thinking it's not required.\n\n3. As soon as Tom performs this action, AWS Control detects this and triggers an alert.\n\n4. John receives this alert, quickly checks which firewall rule was deleted, identifies it was a crucial one, and restores it immediately before any damage could be done.\n\n5. Thanks to the alert, John could take swift action, and the possible vulnerability and subsequent potential data breach was successfully averted.\n\n6. John then trains Tom on the importance of firewall rules and why they shouldn't be tampered with, ensuring better security practices in the future.\n\nThis is a perfect case where the AWS Control 'Create an activity log alert for 'Delete SQL Server Firewall Rule' has proven its usefulness."
    ]
  },
  "Managed": true
}