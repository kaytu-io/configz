{
  "ID": "azure_postgres_db_server_log_connections_on",
  "Title": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
  "Description": "Enable log_connections on PostgreSQL Servers.",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_postgresql_server",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_postgresql_server",
    "QueryToExecute": "select\n  s.id as resource,\n  s.kaytu_account_id as kaytu_account_id,\n  s.kaytu_resource_id as kaytu_resource_id,\n  case\n    when lower(config -\u003e 'ConfigurationProperties' -\u003e\u003e 'value') != 'on' then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when lower(config -\u003e 'ConfigurationProperties' -\u003e\u003e 'value') != 'on' then s.name || ' server parameter log_connections off.'\n    else s.name || ' server parameter log_connections on.'\n  end as reason\n  \n  , s.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_postgresql_server s,\n  jsonb_array_elements(server_configurations) config,\n  azure_subscription sub\nwhere\n  config -\u003e\u003e 'Name' = 'log_connections'\n  and sub.subscription_id = s.subscription_id;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "medium",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "4.3.4"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "4.3"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.3.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/PostgreSQL"
    ],
    "x-kaytu-explanation": [
      "The `log_connections` parameter in PostgreSQL controls whether connection and disconnection attempts are logged. By setting this parameter to `True`, every attempted connection to the server will be logged, including details such as the connection type and the username of the connection initiator.\n\nIn order to enable `log_connections` on PostgreSQL Servers in Azure, you may use Azure's Database for PostgreSQL server group parameters. \n\nIn Azure services, you can manipulate PostgreSQL configurations through Azure CLI, Azure PowerShell, or Azure Portal.\n\nFor Azure CLI, you may use the `az postgres server configuration set` command. Here's an example in markup format, assuming that you already logged into your Azure account and selected a subscription:\n\n```azurecli\naz postgres server configuration set --name log_connections \\\n                                     --resource-group myResourceGroup \\\n                                     --server-name myServerName \\\n                                     --value ON\n```\n\n- `--name` refers to the configuration name which is `log_connections` in this case.\n- `--resource-group` is the resource group that your PostgreSQL server belongs to\n- `--server-name` is the name that identifies your PostgreSQL server\n- `--value` is the value you want to set the configuration to. Here `ON` is used to enable `log_connections`.\n\nRemember that changes to the `log_connections` parameter require a server restart to take effect. After you've set the parameter, you can restart the server using :\n\n```azurecli\naz postgres server restart --resource-group myResourceGroup --name myServerName\n```\nAfter the server restarts, log_connections will be enabled."
    ],
    "x-kaytu-noncompliance-cost": [
      "The cost of non-compliance to the Azure control \"Enable log_connections on PostgreSQL Servers\" can be significant and could harm the organization in various ways.\n\n1. **Security Risks**: Without enabling log_connections, it'd be difficult to track who's connecting to your databases. This lack of visibility increases the chance of unauthorized or malicious activities going unnoticed.\n\n2. **Troubleshooting Difficulties**: Logs provide critical information during problem diagnosis. If log_connections is not enabled, it could be challenging to troubleshoot connectivity issues, resulting in increased downtime.\n\n3. **Audit Failures**: Databases without connection logging might fail to meet regulatory obedience requirements during audits, especially for organizations in regulated industries (like finance or healthcare), leading to fines or penalties.\n\n4. **Business Continuity Risks**: Without connection logs, it might be difficult to identify and rectify issues fast, leading to increased interruption of operations and potential revenue loss.\n\n5. **Reputation Damage**: Non-compliance to such controls could lead to reputation damage and a loss of trust among clients and customers, which could potentially have long-term impacts on business sustainability.\n\nIn conclusion, enabling log_connections on PostgreSQL Servers is a critical control to maintain security, easy problem diagnosis, and business continuity. Failure to comply could lead to significant financial and reputational costs."
    ],
    "x-kaytu-usefulness-example": [
      "The `log_connections` control in Azure PostgreSQL Servers is highly useful for capturing audit logs for diagnostic and troubleshooting purposes. \n\nFor example, an organization may notice unusual activity on their server and suspect that they're experiencing malicious attacks or unauthorized access attempts. By enabling `log_connections`, they can track every connection attempt or connection made to that PostgreSQL server.\n\nHere is an example instance of enabling `log_connections` using Azure portal:\n\n- Go to the Azure portal.\n- Open your server's page.\n- On the left menu, click on the 'Server Log' tab. \n- Set the 'Connection logging' to 'Enabled' to enable `log_connections`.\n\nExample in markup format (replacing `yourserver` with your actual server name):\n\n```shell\naz postgres server-logs enable --name yourserver --resource-group myresourcegroup --server-name yourserver --logs connection.log\n```\n\nThis command, when run in the Azure CLI, will enable the `log_connections` control on the specified PostgreSQL server.\n\nRemember, these logs may contain sensitive information and should be handled appropriately by your organization to maintain privacy and security standards."
    ]
  },
  "Managed": true
}