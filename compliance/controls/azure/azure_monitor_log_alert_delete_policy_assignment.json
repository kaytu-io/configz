{
  "ID": "azure_monitor_log_alert_delete_policy_assignment",
  "Title": "Ensure that Activity Log Alert exists for Delete Policy Assignment",
  "Description": "Create an activity log alert for the Delete Policy Assignment event.",
  "Query": {
    "Connector": "Azure",
    "Engine": "odysseus-v0.0.1",
    "ListOfTables": [
      "azure_log_alert",
      "azure_subscription"
    ],
    "PrimaryTable": "azure_log_alert",
    "QueryToExecute": "with alert_rule as (\n  select\n    alert.id as alert_id,\n    alert.name as alert_name,\n    alert.enabled,\n    alert.location,\n    alert.subscription_id\n  from\n    azure_log_alert as alert,\n    jsonb_array_elements_text(scopes) as sc\n  where\n    alert.location = 'Global'\n    and alert.enabled\n    and sc = '/subscriptions/' || alert.subscription_id\n    and alert.condition -\u003e 'allOf' @\u003e '[{\"equals\":\"Administrative\",\"field\":\"category\"}]'\n    and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"resourceType\", \"equals\": \"microsoft.authorization/policyassignments\"}]'\n    and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"operationName\", \"equals\": \"Microsoft.Authorization/policyAssignments/delete\"}]'\n  limit 1\n)\nselect\n  sub.subscription_id as resource,\n  sub.kaytu_account_id as kaytu_account_id,\n  sub.kaytu_resource_id as kaytu_resource_id,\n  case\n    when count(a.subscription_id) \u003e 0 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when count(a.subscription_id) \u003e 0 then 'Activity log alert exists for delete policy assignment event.'\n    else 'Activity log alert does not exists for delete policy assignment event.'\n  end as reason\n  \n  , sub.display_name as subscription\nfrom\n  azure_subscription sub\n  left join alert_rule a on sub.subscription_id = a.subscription_id\ngroup by\n  sub.kaytu_account_id,\n  sub.kaytu_resource_id,\n  sub._ctx,\n  sub.subscription_id,\n  sub.display_name;\n"
  },
  "DocumentURI": "",
  "ManualVerification": false,
  "Severity": "medium",
  "Tags": {
    "category": [
      "Compliance"
    ],
    "cis": [
      "true"
    ],
    "cis_item_id": [
      "5.2.2"
    ],
    "cis_level": [
      "1"
    ],
    "cis_section_id": [
      "5.2"
    ],
    "cis_type": [
      "automated"
    ],
    "cis_version": [
      "v1.3.0"
    ],
    "plugin": [
      "azure"
    ],
    "service": [
      "Azure/Monitor"
    ],
    "x-kaytu-explanation": [
      "Setting up an activity log alert for the event 'Delete Policy Assignment' in AWS would require setting up CloudWatch Events, which can monitor system events expressed in JSON format for changes to your AWS resources. The event you want to monitor is the deletion of a policy assignment.\n\nHere's a simple step-by-step guide written in markup format on how to do this:\n\n```Markdown\n1. **Sign in to AWS management console**: Use your AWS credentials to sign in to the AWS Management Console.\n\n2. **Access CloudWatch**: On the AWS services list, choose 'CloudWatch'. \n\n3. **Create rule**: On the CloudWatch home page, choose 'Create rule'.\n\n4. **Event pattern**:choose 'Event pattern'. Under 'Event pattern type', select 'Build custom event pattern' .\n\n5. **Event pattern configuration**: Enter the following configuration in the 'Event pattern' box:\n\n```json \n  {\n    \"detail-type\": [\n      \"AWS API Call via CloudTrail\"\n    ],\n     \"detail\": {\n       \"eventSource\": [\"svc.amazonaws.com\"],\n       \"eventName\": [\"DeletePolicyAssignment\"]\n      }\n  }\n```\n\n6. **Targets**: In the 'Targets' section, specify what you want to do when the 'DeletePolicyAssignment' event occurs. For example, you could choose 'Lambda function' and select one of your Lambda functions to handle the event.\n\n7. **Configure details**: Provide a name for the rule and any optional description.\n\n8. **Create rule**: After everything is set, choose 'Create rule'.\n\nYour rule is now created and is ready to monitor the event.\n```\n\nRemember, with AWS CloudWatch, you can create an alert that triggers whenever an event like Delete Policy Assignment occurs. You can then take some action on that alert, like notifying an administrator, logging the event for audits, or automating a response to the event.\n \nThe above configuration basically means that anytime a 'Delete Policy Assignment' API call is made in AWS, the system triggers the specified targets.\n  \nPlease note that you need to replace `svc.amazonaws.com` and `DeletePolicyAssignment` with your specific AWS service and API call, respectively. Also, CloudTrail must be enabled for the corresponding AWS services."
    ],
    "x-kaytu-noncompliance-cost": [
      "Non-compliance to the AWS Control that calls for \"Creating an activity log alert for the Delete Policy Assignment event\" can result in several costly repercussions including:\n\n1. **Security**: Without an alert for Delete Policy Assignment event, unauthorized or inadvertent removal of important policies could go unnoticed. It can lead to potential security threats, data leaks, and regulatory violations, as all activities would not be monitored.\n\n2. **Troubleshooting**: A big part of IT operations and administration involves troubleshooting, often relying heavily on tracking changes in policy assignments. Therefore, without such alerts, identifying root causes of issues that emerge as a result of policy deletions can become challenging and time-consuming.\n\n3. **Governance and Auditing**: An activity log alert for the Delete Policy Assignment event helps in maintaining proper governance and compliance. If this isn't in place, it can lead to non-compliance during audits, which may result in heavy penalties.\n\n4. **Recovery**: In cases where a policy assignment has been mistakenly deleted, a red flag will allow for quick detection and reinstatement. Without such an alert, the recovery process from such errors would be delay, that might result to business disruptions or financial losses. \n\nIn summary, the cost of non-compliance to this control can be high, including financial penalties, compromised security, challenges in troubleshooting, governance issues, and potential business disruptions."
    ],
    "x-kaytu-usefulness-example": [
      "The Delete Policy Assignment event is an Azure feature, not AWS, that notifies when a policy assignment is deleted. The alert monitors actions performed on a specific policy and generates an event signal when a threat is detected. \n\nHere is an example of a situation where it could be useful:\n\nA company’s IT department is using Azure to manage several resources across a variety of applications. They have set up specific policies to comply with their company’s standards and regulations. Suddenly, one of their team members mistakenly deletes an important policy assignment.\n\nIn this scenario, the activity log alert for the Delete Policy Assignment event would instantly notify the IT department about the deletion. This allows them to quickly review and reverse the deletion, if necessary, preventing potential organizational risks or security issues. This not only saves precious time in identifying and resolving accidental deletions but also ensures continuous compliance with regulations."
    ]
  },
  "Managed": true
}