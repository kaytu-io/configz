[
  {
    "ID": "aws_es_domain_in_vpc",
    "Title": "Elasticsearch Service domains should be in a VPC",
    "Description": "This control checks whether Elasticsearch domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access. You should ensure that Amazon ES domains are not attached to public subnets.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_es_domain_in_vpc",
    "DocumentURI": "policies/aws_es_domain_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/ES"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_ec2_instance_in_vpc",
    "Title": "EC2 instances should be in a VPC",
    "Description": "Deploy EC2 instances within a VPC to enable secure communication between an instance and other services within the VPC, without requiring an internet gateway, NAT device, or VPN connection.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_ec2_instance_in_vpc",
    "DocumentURI": "policies/aws_ec2_instance_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/EC2"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_sagemaker_model_in_vpc",
    "Title": "SageMaker models should be in a VPC",
    "Description": "This control checks whether SageMaker models are deployed in a VPC.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_sagemaker_model_in_vpc",
    "DocumentURI": "policies/aws_sagemaker_model_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/SageMaker"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_rds_db_instance_in_vpc",
    "Title": "RDS DB instances should be deployed in a VPC",
    "Description": "This control checks whether RDS DB instances are deployed in a VPC.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_rds_db_instance_in_vpc",
    "DocumentURI": "policies/aws_rds_db_instance_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/RDS"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_lambda_function_in_vpc",
    "Title": "Lambda functions should be in a VPC",
    "Description": "This control checks whether Lambda functions are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access. You should ensure that Amazon Lambda functions are not attached to public subnets.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_lambda_function_in_vpc",
    "DocumentURI": "policies/aws_lambda_function_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/Lambda"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_opensearch_domain_in_vpc",
    "Title": "Amazon OpenSearch domains should be in a VPC private subnet",
    "Description": "This control checks whether Amazon OpenSearch domains are in a VPC with no public subnets associated to it.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_qualifier_sql_opensearch_domain_in_vpc",
    "DocumentURI": "policies/aws_opensearch_domain_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/OpenSearch"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_sagemaker_training_job_in_vpc",
    "Title": "SageMaker training jobs should be in a VPC",
    "Description": "This control checks whether SageMaker training jobs are deployed in a VPC.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_sagemaker_training_job_in_vpc",
    "DocumentURI": "policies/aws_sagemaker_training_job_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/SageMaker"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_elb_application_lb_waf_enabled",
    "Title": "ELB application load balancers should have Web Application Firewall (WAF) enabled",
    "Description": "Ensure AWS WAF is enabled on application load balancers to help protect web applications.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_elb_application_lb_waf_enabled",
    "DocumentURI": "policies/aws_elb_application_lb_waf_enabled.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/ELB"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_sagemaker_notebook_instance_in_vpc",
    "Title": "SageMaker notebook instances should be in a VPC",
    "Description": "This control checks whether SageMaker Notebook instances are deployed in a VPC.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_sagemaker_notebook_instance_in_vpc",
    "DocumentURI": "policies/aws_sagemaker_notebook_instance_in_vpc.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/SageMaker"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_ecs_service_not_publicly_accessible",
    "Title": "Amazon ECS services should not have public IP addresses assigned to them automatically",
    "Description": "This control checks whether Amazon ECS services are configured to automatically assign public IP addresses.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_ecs_service_not_publicly_accessible",
    "DocumentURI": "policies/aws_ecs_service_not_publicly_accessible.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/ECS"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_ec2_instance_not_publicly_accessible",
    "Title": "EC2 instances should not have a public IP address",
    "Description": "This control checks whether EC2 instances have a public IPv4 address.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_ec2_instance_not_publicly_accessible",
    "DocumentURI": "policies/aws_ec2_instance_not_publicly_accessible.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/EC2"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_emr_cluster_master_nodes_no_public_ip",
    "Title": "EMR cluster master nodes should not have a public IP address",
    "Description": "This control checks whether master nodes on Amazon EMR clusters have public IP addresses. This control only checks Amazon EMR clusters that are in RUNNING or WAITING state.",
    "QueryID": "aws_tag_dimensions_qualifier_sql.common_dimensions_qualifier_sql_emr_cluster_master_nodes_no_public_ip",
    "DocumentURI": "policies/aws_emr_cluster_master_nodes_no_public_ip.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/EMR"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_vpc_subnet_auto_assign_public_ip_disabled",
    "Title": "VPC subnets should not auto-assign public IP addresses",
    "Description": "This control checks whether VPC subnets automatically assign public IPv4 addresses.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_vpc_subnet_auto_assign_public_ip_disabled",
    "DocumentURI": "policies/aws_vpc_subnet_auto_assign_public_ip_disabled.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/VPC"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_vpc_peering_connection_cross_account_shared",
    "Title": "VPCs should only be peered with trusted accounts",
    "Description": "This control checks if VPCs are only peered with trusted accounts.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_vpc_peering_connection_cross_account_shared",
    "DocumentURI": "policies/aws_vpc_peering_connection_cross_account_shared.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/VPC"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_autoscaling_launch_config_public_ip_disabled",
    "Title": "Auto Scaling launch configs should not associate public IP addresses to instances",
    "Description": "Ensure that EC2 Auto Scaling launch configurations do not associate public IP addresses to Auto Scaling group instances.",
    "QueryID": "aws_common_dimensions_sql_autoscaling_launch_config_public_ip_disabled",
    "DocumentURI": "policies/aws_autoscaling_launch_config_public_ip_disabled.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/AutoScaling"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_ec2_network_interface_not_publicly_accessible",
    "Title": "EC2 network interfaces should not have a public IP address",
    "Description": "This control checks if EC2 network interfaces are associated with any public IP.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_sql_ec2_network_interface_not_publicly_accessible",
    "DocumentURI": "policies/aws_ec2_network_interface_not_publicly_accessible.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/EC2"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_vpc_security_group_restrict_ingress_tcp_udp_all",
    "Title": "VPC security groups should restrict ingress TCP and UDP access from 0.0.0.0/0",
    "Description": "This control checks if any security groups allow inbound 0.0.0.0/0 to TCP or UDP ports.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_qualifier_sql_vpc_security_group_restrict_ingress_tcp_udp_all",
    "DocumentURI": "policies/aws_vpc_security_group_restrict_ingress_tcp_udp_all.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/VPC"
      ]
    },
    "Managed": true
  },
  {
    "ID": "aws_vpc_security_group_restrict_ingress_common_ports_all",
    "Title": "VPC security groups should restrict ingress access on ports 20, 21, 22, 3306, 3389, 4333 from 0.0.0.0/0",
    "Description": "This control checks if any security groups allow inbound 0.0.0.0/0 or ::/0 to ports 20, 21, 22, 3306, 3389, 4333.",
    "QueryID": "aws_tag_dimensions_sql.common_dimensions_qualifier_sql_vpc_security_group_restrict_ingress_common_ports_all",
    "DocumentURI": "policies/aws_vpc_security_group_restrict_ingress_common_ports_all.md",
    "ManualVerification": false,
    "Severity": "",
    "Tags": {
      "category": [
        "Perimeter"
      ],
      "plugin": [
        "aws"
      ],
      "service": [
        "AWS/VPC"
      ]
    },
    "Managed": true
  }
]