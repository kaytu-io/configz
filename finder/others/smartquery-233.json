{
  "connectors": ["AWS"],
  "title": "Find all  security groups that do not restric ingress access on ports 20, 21, 22, 3306, 3389, 4333 from all (0.0.0.0/0)",
  "query": "with ingress_ssh_rules as (\n  select\n    group_id,\n    count(*) as num_ssh_rules\n  from\n    aws_vpc_security_group_rule\n  where\n    type = 'ingress'\n    and cidr_ip = '0.0.0.0/0'\n    and (\n        ( ip_protocol = '-1'\n        and from_port is null\n        )\n        or (\n            from_port \u003e= 22\n            and to_port \u003c= 22\n        )\n        or (\n            from_port \u003e= 3389\n            and to_port \u003c= 3389\n        )\n        or (\n            from_port \u003e= 21\n            and to_port \u003c= 21\n        )\n        or (\n            from_port \u003e= 20\n            and to_port \u003c= 20\n        )\n        or (\n            from_port \u003e= 3306\n            and to_port \u003c= 3306\n        )\n        or (\n            from_port \u003e= 4333\n            and to_port \u003c= 4333\n        )\n    )\n  group by\n    group_id\n)\nselect\n  -- Required Columns\n  arn as resource,\n  case\n    when ingress_ssh_rules.group_id is null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when ingress_ssh_rules.group_id is null then sg.group_id || ' ingress restricted for ports 20, 21, 22, 3306, 3389, 4333 from 0.0.0.0/0.'\n    else  sg.group_id || ' contains ' || ingress_ssh_rules.num_ssh_rules || ' ingress rule(s) allowing access on ports 20, 21, 22, 3306, 3389, 4333 from 0.0.0.0/0.'\n  end as reason,\n  -- Additional Dimensions\n  sg.region,\n  sg.account_id\nfrom\n  aws_vpc_security_group as sg\n  left join ingress_ssh_rules on ingress_ssh_rules.group_id = sg.group_id"
}