{
  "ID": "azure_compute_vm_vulnerability_assessment_solution_enabled",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with defender_enabled_vms as (\n  select\n    distinct a.vm_id as vm_id\n  from\n    azure_compute_virtual_machine as a,\n    jsonb_array_elements(extensions) as b\n  where\n    b -\u003e\u003e 'ExtensionType' = any(ARRAY ['MDE.Linux', 'MDE.Windows'])\n    and b -\u003e\u003e 'ProvisioningState' = 'Succeeded'\n),\nagent_installed_vm as (\n  select\n    distinct a.vm_id as vm_id\n  from\n    defender_enabled_vms as a\n    left join azure_compute_virtual_machine as w on w.vm_id = a.vm_id,\n    jsonb_array_elements(extensions) as b\n  where\n    b -\u003e\u003e 'Publisher' = 'Qualys'\n    and b -\u003e\u003e 'ExtensionType' = any(ARRAY ['WindowsAgent.AzureSecurityCenter', 'LinuxAgent.AzureSecurityCenter'])\n    and b -\u003e\u003e 'ProvisioningState' = 'Succeeded'\n)\nselect\n  a.vm_id as resource,\n  case\n    when b.vm_id is not null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when b.vm_id is not null then a.title || ' have vulnerability assessment solution enabled.'\n    else a.title || ' have vulnerability assessment solution disabled.'\n  end as reason\n  \n  , a.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_compute_virtual_machine as a\n  left join agent_installed_vm as b on a.vm_id = b.vm_id,\n  azure_subscription as sub\nwhere\n  sub.subscription_id = a.subscription_id;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_compute_virtual_machine",
  "ListOfTables": [
    "azure_compute_virtual_machine",
    "azure_subscription"
  ]
}