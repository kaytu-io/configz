{
  "ID": "azure_container_registry_geo_replication_enabled",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with geo_replication_count as (\n  select\n    name as name,\n    subscription_id,\n    (v -\u003e\u003e 'currentValue')::int as geo_replication_count\n  from\n    azure_container_registry,\n    jsonb_array_elements(usages -\u003e 'value') as v\n  where\n    v -\u003e\u003e 'name' = 'Geo-replications'\n    and v -\u003e\u003e 'unit' = 'Count'\n)\nselect\n  distinct a.name as resource,\n  case\n    when sku_name \u003c\u003e 'Premium' then 'skip'\n    when c.geo_replication_count \u003e 1 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when sku_name \u003c\u003e 'Premium' then a.name || ' is of ' || sku_tier || ' tier.'\n    when c.geo_replication_count \u003e 1 then a.name || ' ' || c.geo_replication_count || ' geo replication configured.'\n    else a.name || ' geo replication not configured.'\n  end as reason\n  \n  , a.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_container_registry as a\n  left join geo_replication_count as c on a.name = c.name and a.subscription_id = c.subscription_id,\n  azure_subscription as sub\nwhere\n  sub.subscription_id = a.subscription_id;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_container_registry",
  "ListOfTables": [
    "azure_container_registry",
    "azure_subscription"
  ]
}