{
  "ID": "azure_keyvault_with_non_rbac_secret_expiration_set",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with non_rbac_vault as (\n  select\n    name\n  from\n    azure_key_vault\n  where not enable_rbac_authorization\n)\nselect\n  kvs.id as resource,\n  case\n    when v.name is null then 'skip'\n    when enabled and expires_at is null then 'alarm'\n    else 'ok'\n  end as status,\n  vault_name || ' key ' || kvs.name ||\n  case\n    when v.name is null then ' RBAC enabled vault.'\n    when enabled and expires_at is null then ' expiration date not set.'\n    when not enabled then ' disabled.'\n    else ' expiration date set to ' || to_char(expires_at, 'DD-Mon-YYYY') || '.'\n  end as reason\n  \n  , kvs.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_key_vault_secret kvs\n  left join non_rbac_vault as v on v.name = kvs.vault_name,\n  azure_subscription sub\nwhere\n  sub.subscription_id = kvs.subscription_id;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_key_vault_secret",
  "ListOfTables": [
    "azure_key_vault",
    "azure_key_vault_secret",
    "azure_subscription"
  ]
}