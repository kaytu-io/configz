{
  "ID": "azure_appservice_web_app_diagnostic_logs_enabled",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "select\n  a.id as resource,\n  case\n    when (a.configuration-\u003e 'properties' -\u003e 'detailedErrorLoggingEnabled')::bool\n      and (a.configuration -\u003e 'properties' -\u003e 'httpLoggingEnabled')::bool\n      and (a.configuration-\u003e 'properties' -\u003e 'requestTracingEnabled')::bool\n    then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when (a.configuration-\u003e 'properties' -\u003e 'detailedErrorLoggingEnabled')::bool\n      and (a.configuration -\u003e 'properties' -\u003e 'httpLoggingEnabled')::bool\n      and (a.configuration-\u003e 'properties' -\u003e 'requestTracingEnabled')::bool\n      then a.name || ' diagnostic logs enabled.'\n    else a.title || ' diagnostic logs disabled.'\n      -- concat_ws(', ',\n      -- case when not ((a.configuration-\u003e 'properties' -\u003e 'detailedErrorLoggingEnabled')::bool) then 'detailed_Error_Logging_Enabled' end,\n      -- case when not ((a.configuration -\u003e 'properties' -\u003e 'httpLoggingEnabled')::bool) then 'http_logging_enabled' end,\n      -- case when not ((a.configuration-\u003e 'properties' -\u003e 'requestTracingEnabled')::bool) then 'request_tracing_enabled' end\n      -- ) || '.'\n  end as reason\n  \n  , a.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_app_service_web_app as a,\n  azure_subscription as sub\nwhere\n  sub.subscription_id = a.subscription_id;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_app_service_web_app",
  "ListOfTables": [
    "azure_app_service_web_app",
    "azure_subscription"
  ]
}