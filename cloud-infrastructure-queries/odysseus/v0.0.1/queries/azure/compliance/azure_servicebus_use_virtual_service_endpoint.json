{
  "ID": "azure_servicebus_use_virtual_service_endpoint",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with service_bus as (\n  select\n    name,\n    region,\n    network_rule_set -\u003e 'properties' -\u003e 'virtualNetworkRules' as virtual_network_rules\n  from\n    azure_servicebus_namespace\n  where\n    sku_tier = 'Premium'\n    and (\n      jsonb_array_length(network_rule_set -\u003e 'properties' -\u003e 'virtualNetworkRules') = 0\n      or exists (\n        select\n          *\n        from\n          jsonb_array_elements(network_rule_set -\u003e 'properties' -\u003e 'virtualNetworkRules') as t\n        where\n          t -\u003e 'subnet' -\u003e\u003e 'id' is null\n      )\n    )\n)\nselect\n  bus.id as resource,\n  case\n    when bus.name != service_bus.name then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when bus.name != service_bus.name then bus.name || ' configured with virtual service endpoint.'\n    else bus.name || ' not configured with virtual service endpoint.'\n  end as reason\n  \n  , bus.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_servicebus_namespace as bus,\n  azure_subscription as sub\n  left join service_bus on true\nwhere\n  sub.subscription_id = bus.subscription_id;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_servicebus_namespace",
  "ListOfTables": [
    "azure_servicebus_namespace",
    "azure_subscription"
  ]
}