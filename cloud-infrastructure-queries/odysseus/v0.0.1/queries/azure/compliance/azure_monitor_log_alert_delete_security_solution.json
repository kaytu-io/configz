{
  "ID": "azure_monitor_log_alert_delete_security_solution",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with alert_rule as (\n  select\n    alert.id as alert_id,\n    alert.name as alert_name,\n    alert.enabled,\n    alert.location,\n    alert.subscription_id\n  from\n    azure_log_alert as alert,\n    jsonb_array_elements_text(scopes) as sc\n  where\n    alert.location = 'Global'\n    and alert.enabled\n    and sc = '/subscriptions/' || alert.subscription_id\n    and (\n      (\n        alert.condition -\u003e 'allOf' @\u003e '[{\"equals\":\"Security\",\"field\":\"category\"}]'\n        and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"resourceType\", \"equals\": \"microsoft.security/securitysolutions\"}]'\n        and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"operationName\", \"equals\": \"Microsoft.Security/securitySolutions/delete\"}]'\n      )\n      or\n      (\n        alert.condition -\u003e 'allOf' @\u003e '[{\"equals\":\"Security\",\"field\":\"category\"}]'\n        and alert.condition -\u003e 'allOf' @\u003e '[{\"field\": \"resourceType\", \"equals\": \"microsoft.security/securitysolutions\"}]'\n        and jsonb_array_length(alert.condition -\u003e 'allOf') = 2\n      )\n    )\n  limit 1\n)\nselect\n  sub.subscription_id as resource,\n  case\n    when count(a.subscription_id) \u003e 0 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when count(a.subscription_id) \u003e 0 then 'Activity log alert exists for delete Security Solution event.'\n    else 'Activity log alert does not exists for delete Security Solution event.'\n  end as reason\n  \n  , sub.display_name as subscription\nfrom\n  azure_subscription sub\n  left join alert_rule a on sub.subscription_id = a.subscription_id\ngroup by\n  sub._ctx,\n  sub.subscription_id,\n  sub.display_name;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_log_alert",
  "ListOfTables": [
    "azure_log_alert",
    "azure_subscription"
  ]
}