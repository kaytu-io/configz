{
  "ID": "azure_iot_hub_logging_enabled",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with logging_details as (\n  select\n    distinct id as id\n  from\n    azure_iothub,\n    jsonb_array_elements(diagnostic_settings) setting,\n    jsonb_array_elements(setting -\u003e 'properties' -\u003e 'logs') log\n  where\n    diagnostic_settings is not null\n    and (\n      (\n        (log -\u003e\u003e 'enabled') :: boolean\n        and (log -\u003e 'retentionPolicy' -\u003e\u003e 'enabled') :: boolean\n        and (log -\u003e 'retentionPolicy') :: JSONB ? 'days'\n      )\n      or\n      (\n        (log -\u003e\u003e 'enabled') :: boolean\n        and log -\u003e 'retentionPolicy' -\u003e\u003e 'enabled' \u003c\u003e 'true'\n      )\n    )\n)\nselect\n  a.id as resource,\n  case\n    when a.diagnostic_settings is null then 'alarm'\n    when l.id is not null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when a.diagnostic_settings is null then a.name || ' logging disabled.'\n    when l.id is not null then a.name || ' logging enabled.'\n    else a.name || ' logging disabled.'\n  end as reason\n  \n  , a.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_iothub as a\n  left join logging_details as l on a.id = l.id,\n  azure_subscription as sub\nwhere\n  sub.subscription_id = a.subscription_id;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_iothub",
  "ListOfTables": [
    "azure_iothub",
    "azure_subscription"
  ]
}