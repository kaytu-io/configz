{
  "ID": "azure_sql_server_auditing_storage_account_destination_retention_90_days",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with sql_server as(\n  select\n    id,\n    name,\n    subscription_id,\n    resource_group,\n    p -\u003e 'properties' -\u003e\u003e 'retentionDays' as retentionDays\n  from\n    azure_sql_server,\n    jsonb_array_elements(server_audit_policy) as p\n  where\n  p -\u003e 'properties' -\u003e\u003e 'state' = 'Enabled'\n  and p -\u003e 'properties' -\u003e\u003e 'storageEndpoint' is not null\n)\nselect\n  a.id as resource,\n  case\n    when s.id is null then 'skip'\n    -- The value in days of the retention period (0 is an indication for unlimited retention).\n    when s.retentionDays::Integer = 0 then 'ok'\n    when s.retentionDays::Integer \u003e= 90 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when s.id is null then a.name || ' auditing to storage account destination not enabled.'\n    when s.retentionDays::Integer = 0 then a.name || ' auditing to storage account destination configured with unlimited retention days.'\n    when s.retentionDays::Integer \u003e= 90 then a.name || ' auditing to storage account destination configured with 90 days retention or higher.'\n    else a.name || ' auditing to storage account destination not configured with 90 days retention or higher.'\n  end as reason\n  \n  , a.resource_group as resource_group\n  , sub.display_name as subscription\nfrom\n  azure_sql_server as a\n  left join sql_server as s on s.id = a.id,\n  azure_subscription as sub\nwhere\n  sub.subscription_id = a.subscription_id;\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_sql_server",
  "ListOfTables": [
    "azure_sql_server",
    "azure_subscription"
  ]
}