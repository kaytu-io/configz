{
  "ID": "azure_expected_tag_values_sql_resource_group_express_route_circuit_expected_tag_values",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with raw_data as\n(\n  select\n    id,\n    title,\n    tags,\n    row_to_json(json_each($1)) as expected_tag_values,\n    resource_group, subscription_id\n  from\n    azure_express_route_circuit\n  where\n    tags::text \u003c\u003e '{}'\n),\nexploded_expected_tag_values as\n(\n  select\n    id,\n    title,\n    expected_tag_values -\u003e\u003e 'key' as tag_key,\n    jsonb_array_elements_text((expected_tag_values -\u003e\u003e 'value')::jsonb) as expected_values,\n    tags -\u003e\u003e (expected_tag_values -\u003e\u003e 'key') as current_value,\n    resource_group, subscription_id\n  from\n    raw_data\n),\nanalysis as\n(\n  select\n    id,\n    title,\n    current_value like expected_values as has_appropriate_value,\n    case\n      when current_value is null then true\n      else false\n    end as has_no_matching_tags,\n    tag_key,\n    current_value,\n    resource_group, subscription_id\n  from\n    exploded_expected_tag_values\n),\nstatus_by_tag as\n(\n  select\n    id,\n    title,\n    bool_or(has_appropriate_value) as status,\n    tag_key,\n    case\n      when bool_or(has_appropriate_value) then ''\n      else tag_key\n    end as reason,\n    bool_or(has_no_matching_tags) as can_skip,\n    current_value,\n    resource_group, subscription_id\n  from\n    analysis\n  group by\n    id,\n    title,\n    tag_key,\n    current_value,\n    resource_group, subscription_id\n)\nselect\n  id as resource,\n  case\n    when bool_and(can_skip) then 'skip'\n    when bool_and(status) then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when bool_and(can_skip) then title || ' has no matching tag keys.'\n    when bool_and(status) then title || ' has expected tag values for tags: ' || array_to_string(array_agg(tag_key) filter(where status), ', ') || '.'\n    else title || ' has unexpected tag values for tags: ' || array_to_string(array_agg(tag_key) filter(where not status), ', ') || '.'\n  end as reason,\n  resource_group, subscription_id\nfrom\n  status_by_tag\ngroup by\n  id,\n  title,\n  resource_group, subscription_id\nunion all\nselect\n  id as resource,\n  'skip' as status,\n  title || ' has no tags.' as reason,\n  resource_group, subscription_id\nfrom\n  azure_express_route_circuit\nwhere\n  tags::text = '{}'\nunion all\nselect\n  id as resource,\n  'skip' as status,\n  title || ' has tags but no expected tag values are set.' as reason,\n  resource_group, subscription_id\nfrom\n  azure_express_route_circuit\nwhere\n  $1::text = '{}'\n  and tags::text \u003c\u003e '{}'\n",
  "Connector": "Azure",
  "PrimaryTable": "azure_express_route_circuit",
  "ListOfTables": [
    "azure_express_route_circuit"
  ]
}