{
  "ID": "aws_elb_classic_lb_with_outbound_rule",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with sg_with_outbound as (\n  select\n    arn,\n    sg\n  from\n    aws_ec2_classic_load_balancer,\n    jsonb_array_elements_text(security_groups) as sg\n    left join aws_vpc_security_group_rule as sgr on sg = sgr.group_id\n  where\n    sgr.type = 'egress'\n  group by\n    sg, arn\n), classic_lb_without_outbound as (\n  select\n    distinct arn\n  from\n    aws_ec2_classic_load_balancer,\n    jsonb_array_elements_text(security_groups) as s\n  where\n    s not in ( select sg from sg_with_outbound)\n)\nselect\n  distinct c.arn as resource,\n  case\n    when c.security_groups is null then 'alarm'\n    when o.arn is not null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when c.security_groups is null then c.title || ' does not have security group attached.'\n    when o.arn is not null then c.title || ' all attached security groups do not have outbound rule(s).'\n    else c.title || ' all attached security groups have outbound rule(s).'\n  end as reason\n  \n  , c.region, c.account_id\nfrom\n  aws_ec2_classic_load_balancer as c\n  left join classic_lb_without_outbound as o on c.arn = o.arn;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_ec2_classic_load_balancer",
  "ListOfTables": [
    "aws_ec2_classic_load_balancer",
    "aws_vpc_security_group_rule"
  ]
}