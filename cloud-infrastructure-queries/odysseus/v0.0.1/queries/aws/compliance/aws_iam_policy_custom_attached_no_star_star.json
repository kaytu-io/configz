{
  "ID": "aws_iam_policy_custom_attached_no_star_star",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "-- This query checks the customer managed policies having * access and attached to IAM resource(s)\nwith star_access_policies as (\n  select\n    arn,\n    count(*) as num_bad_statements\n  from\n    aws_iam_policy,\n    jsonb_array_elements(policy_std -\u003e 'Statement') as s,\n    jsonb_array_elements_text(s -\u003e 'Resource') as resource,\n    jsonb_array_elements_text(s -\u003e 'Action') as action\n  where\n    not is_aws_managed\n    and s -\u003e\u003e 'Effect' = 'Allow'\n    and resource = '*'\n    and (\n      (action = '*'\n      or action = '*:*'\n      )\n    )\n    and is_attached\n  group by arn\n)\nselect\n  p.arn as resource,\n  case\n    when s.arn is null then 'ok'\n    else 'alarm'\n  end status,\n  p.name || ' contains ' || coalesce(s.num_bad_statements,0)  || ' statements that allow action \"*\" on resource \"*\".' as reason\n  \n  , p.account_id\nfrom\n  aws_iam_policy as p\n  left join star_access_policies as s on p.arn = s.arn\nwhere\n  not p.is_aws_managed;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_iam_policy",
  "ListOfTables": [
    "aws_iam_policy"
  ]
}