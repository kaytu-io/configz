{
  "ID": "aws_common_dimensions_sql_ram_resource_shared_with_trusted_accounts",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with ram_shared_resources as (\n  select distinct\n    rsa.associated_entity as \"shared_resource\",\n    rpa.associated_entity as \"shared_with_principal\",\n    rsa.status,\n    rsa.region,\n    rsa.account_id,\n    rsa._ctx\n  from\n    aws_ram_resource_association as rsa\n    inner join aws_ram_principal_association as rpa on rsa.resource_share_name = rpa.resource_share_name\n  where\n    rsa.status \u003c\u003e 'FAILED' and rpa.status \u003c\u003e 'FAILED'\n    and rpa.associated_entity ~ '^[0-9]+$'\n),\nshared_data as (\n  select\n    (regexp_split_to_array(shared_resource, ':'))[6] as resource,\n    to_jsonb(string_to_array(string_agg(shared_with_principal, ','), ',', '')) - ($1)::text[] as untrusted_accounts,\n    region,\n    account_id,\n    _ctx\n  FROM\n    ram_shared_resources\n  group by\n    shared_resource,\n    region,\n    account_id,\n    _ctx\n)\nselect\n  resource,\n  case\n    when jsonb_array_length(untrusted_accounts) \u003e 0 then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when jsonb_array_length(untrusted_accounts) \u003e 0 then\n      resource ||\n      case\n        when jsonb_array_length(untrusted_accounts) \u003e 2 then\n          concat(' shared with untrusted accounts ', untrusted_accounts #\u003e\u003e '{0}', ', ', untrusted_accounts #\u003e\u003e '{1}', ' and ', (jsonb_array_length(untrusted_accounts) - 2)::text, ' more.')\n        when jsonb_array_length(untrusted_accounts) = 2 then concat(' shared with untrusted accounts ', untrusted_accounts #\u003e\u003e '{0}', ' and ', untrusted_accounts #\u003e\u003e '{1}', '.')\n        else concat(' shared with untrusted account ', untrusted_accounts #\u003e\u003e '{0}', '.')\n      end\n    else resource || ' shared with trusted account(s).'\n  end as reason\n  , region, account_id\nfrom\n  shared_data;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_ram_resource_association",
  "ListOfTables": [
    "aws_ram_principal_association",
    "aws_ram_resource_association"
  ]
}