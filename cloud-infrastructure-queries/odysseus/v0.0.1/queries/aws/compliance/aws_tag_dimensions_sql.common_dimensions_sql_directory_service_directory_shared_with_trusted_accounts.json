{
  "ID": "aws_tag_dimensions_sql.common_dimensions_sql_directory_service_directory_shared_with_trusted_accounts",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with all_directories as (\n  select\n    directory_id,\n    shared_directories,\n    region,\n    title,\n    _ctx,\n    tags,\n    account_id\n  from\n    aws_directory_service_directory\n  order by\n    account_id,\n    region,\n    directory_id,\n    _ctx,\n    tags,\n    title\n),\ndirectory_data as (\n  select\n    directory_id,\n    to_jsonb(string_to_array(string_agg(sd -\u003e\u003e 'SharedAccountId', ','), ',')) as shared_accounts,\n    to_jsonb(string_to_array(string_agg(sd -\u003e\u003e 'SharedAccountId', ','), ',')) - ($1)::text[] as untrusted_accounts,\n    region,\n    title,\n    _ctx,\n    tags,\n    account_id\n  from\n    all_directories,\n    jsonb_array_elements(shared_directories) sd\n  group by\n    directory_id,\n    region,\n    _ctx,\n    tags,\n    account_id,\n    title\n),\nevaluated_directories as (\n  select\n    all_directories.*,\n    shared_accounts,\n    untrusted_accounts\n  from\n    all_directories\n    left join directory_data on all_directories.directory_id = directory_data.directory_id\n)\nselect\n  directory_id as resource,\n  case\n    when shared_accounts is null or jsonb_array_length(shared_accounts) = 0 then 'ok'\n    when untrusted_accounts is not null or jsonb_array_length(untrusted_accounts) \u003e 0 then 'info'\n    else 'ok'\n  end as status,\n  case\n    when shared_accounts is null or jsonb_array_length(shared_accounts) = 0 then directory_id || ' is not shared.'\n    when untrusted_accounts is not null or jsonb_array_length(shared_accounts) \u003e 0 then directory_id || ' shared with ' ||\n      case\n        when jsonb_array_length(untrusted_accounts) \u003e 2\n        then concat('untrusted accounts ' , untrusted_accounts #\u003e\u003e '{0}', ', ', untrusted_accounts #\u003e\u003e '{1}', ' and ' || (jsonb_array_length(untrusted_accounts) - 2)::text || ' more.')\n        when jsonb_array_length(untrusted_accounts) = 2 then\n        concat('untrusted accounts ', untrusted_accounts #\u003e\u003e '{0}', ' and ', untrusted_accounts #\u003e\u003e '{1}', '.')\n        else concat('untrusted account ', untrusted_accounts #\u003e\u003e '{0}', '.')\n      end\n    else directory_id || ' shared with trusted account(s).'\n  end as reason\n  \n  , region, account_id\nfrom\n  evaluated_directories;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_directory_service_directory",
  "ListOfTables": [
    "aws_directory_service_directory"
  ]
}