{
  "ID": "aws_backup_plan_min_retention_35_days",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with all_plans as (\n  select\n    arn,\n    r as Rules,\n    title,\n    region,\n    account_id,\n    _ctx\n  from\n    aws_backup_plan,\n    jsonb_array_elements(backup_plan -\u003e 'Rules') as r\n)\nselect\n  -- The resource ARN can be duplicate as we are checking all the associated rules to the backup-plan\n  -- Backup plans are composed of one or more backup rules.\n  -- https://docs.aws.amazon.com/aws-backup/latest/devguide/creating-a-backup-plan.html\n  r.arn as resource,\n  case\n    when r.Rules is null then 'alarm'\n    when r.Rules -\u003e\u003e 'Lifecycle' is null then 'ok'\n    when (r.Rules -\u003e 'Lifecycle' -\u003e\u003e 'DeleteAfterDays')::int \u003e= 35 then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when r.Rules is null then r.title || ' retention period not set.'\n    when r.Rules -\u003e\u003e 'Lifecycle' is null then (r.Rules -\u003e\u003e 'RuleName') || ' retention period set to never expire.'\n    else (r.Rules -\u003e\u003e 'RuleName') || ' retention period set to ' || (r.Rules -\u003e 'Lifecycle' -\u003e\u003e 'DeleteAfterDays') || ' days.'\n  end as reason\n  , region, account_id\nfrom\n  all_plans as r;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_backup_plan",
  "ListOfTables": [
    "aws_backup_plan"
  ]
}