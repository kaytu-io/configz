{
  "ID": "aws_secretsmanager_secret_encrypted_with_kms_cmk",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with encryption_keys as (\n  select\n    distinct s.arn,\n    k.aliases as alias\n  from\n    aws_secretsmanager_secret as s\n    left join aws_kms_key as k on k.arn = s.kms_key_id\n  where\n    jsonb_array_length(k.aliases) \u003e 0\n)\nselect\n  s.arn as resource,\n  case\n    when kms_key_id is null\n      or kms_key_id = 'alias/aws/secretsmanager'\n      or k.alias @\u003e '[{\"AliasName\":\"alias/aws/secretsmanager\"}]'then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when kms_key_id is null then title || ' not encrypted with KMS.'\n    when kms_key_id = 'alias/aws/secretsmanager' or k.alias @\u003e '[{\"AliasName\":\"alias/aws/secretsmanager\"}]' then title || ' encrypted with AWS managed key.'\n    else title || ' encrypted with CMK.'\n  end as reason\n  \n  , region, account_id\nfrom\n  aws_secretsmanager_secret as s\n  left join encryption_keys as k on s.arn = k.arn;\n\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_secretsmanager_secret",
  "ListOfTables": [
    "aws_kms_key",
    "aws_secretsmanager_secret"
  ]
}