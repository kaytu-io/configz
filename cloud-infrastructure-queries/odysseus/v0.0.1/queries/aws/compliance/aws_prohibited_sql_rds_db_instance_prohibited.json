{
  "ID": "aws_prohibited_sql_rds_db_instance_prohibited",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with analysis as (\n  select\n    arn,\n    array_agg(k) as prohibited_tags,\n    region,\n    account_id,\n    tags,\n    _ctx\n  from\n    aws_rds_db_instance,\n    jsonb_object_keys(tags) as k,\n    unnest($1::text[]) as prohibited_key\n  where\n    k = prohibited_key\n  group by\n    arn,\n    region,\n    account_id,\n    tags,\n    _ctx\n)\nselect\n  r.arn as resource,\n  case\n    when a.prohibited_tags \u003c\u003e array[]::text[] then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when a.prohibited_tags \u003c\u003e array[]::text[] then r.title || ' has prohibited tags: ' || array_to_string(a.prohibited_tags, ', ') || '.'\n    else r.title || ' has no prohibited tags.'\n  end as reason\n  \n  , r.region, r.account_id\nfrom\n  aws_rds_db_instance as r\nfull outer join\n  analysis as a on a.arn = r.arn;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_rds_db_instance",
  "ListOfTables": [
    "aws_rds_db_instance"
  ]
}