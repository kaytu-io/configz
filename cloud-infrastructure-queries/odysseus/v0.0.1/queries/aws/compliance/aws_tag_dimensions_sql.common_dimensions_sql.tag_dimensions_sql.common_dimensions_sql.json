{
  "ID": "aws_tag_dimensions_sql.common_dimensions_sql.tag_dimensions_sql.common_dimensions_sql",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "(with shared_cluster_snapshot_data as (\n  select\n    arn,\n    title,\n    (cluster_snapshot -\u003e\u003e 'AttributeValues')::jsonb as shared_accounts,\n    (cluster_snapshot -\u003e\u003e 'AttributeValues')::jsonb - ($1)::text[] as untrusted_accounts,\n    region,\n    _ctx,\n    tags,\n    account_id\n  from\n    aws_rds_db_cluster_snapshot,\n    jsonb_array_elements(db_cluster_snapshot_attributes) as cluster_snapshot\n)\nselect\n  arn as resource,\n  case\n    when jsonb_array_length(untrusted_accounts) \u003e 0 then 'info'\n    else 'ok'\n  end status,\n  case\n    when untrusted_accounts #\u003e\u003e '{0}' = 'all' then title || ' publicly restorable.'\n    when jsonb_array_length(untrusted_accounts) \u003e 0 and untrusted_accounts #\u003e\u003e '{0}' != 'all'\n    then title ||\n  case\n    when jsonb_array_length(untrusted_accounts) \u003e 2\n    then concat(' shared with untrusted accounts ', untrusted_accounts #\u003e\u003e '{0}', ', ', untrusted_accounts #\u003e\u003e '{1}', ' and ' || (jsonb_array_length(untrusted_accounts) - 2)::text || ' more.' )\n    when jsonb_array_length(untrusted_accounts) = 2\n    then concat(' shared with untrusted accounts ', untrusted_accounts #\u003e\u003e '{0}', ' and ', untrusted_accounts #\u003e\u003e '{1}', '.')\n    else concat(' shared with untrusted account ', untrusted_accounts #\u003e\u003e '{0}', '.')\n  end\n    else\n      case\n        when shared_accounts is null then title || ' is not shared.'\n        else title || ' shared with trusted account(s).'\n      end\n  end reason\n  \n  , region, account_id\nfrom\n  shared_cluster_snapshot_data)\n\nunion\n\n( with shared_db_snapshot_data as (\n  select\n    arn,\n    title,\n    (database_snapshot -\u003e\u003e 'AttributeValues')::jsonb as shared_accounts,\n    (database_snapshot -\u003e\u003e 'AttributeValues')::jsonb - ($1)::text[] as untrusted_accounts,\n    region,\n    _ctx,\n    tags,\n    account_id\n  from\n    aws_rds_db_snapshot,\n    jsonb_array_elements(db_snapshot_attributes) as database_snapshot\n)\nselect\n  arn as resource,\n  case\n    when jsonb_array_length(untrusted_accounts) \u003e 0 then 'info'\n    else 'ok'\n  end status,\n  case\n    when untrusted_accounts #\u003e\u003e '{0}' = 'all'\n    then title || ' publicly restorable.'\n    when jsonb_array_length(untrusted_accounts) \u003e 0 and untrusted_accounts #\u003e\u003e '{0}' != 'all'\n    then title ||\n  case\n    when jsonb_array_length(untrusted_accounts) \u003e 2\n    then concat(' shared with untrusted accounts ', untrusted_accounts #\u003e\u003e '{0}', ', ', untrusted_accounts #\u003e\u003e '{1}', ' and ' || (jsonb_array_length(untrusted_accounts) - 2)::text || ' more.' )\n    when jsonb_array_length(untrusted_accounts) = 2\n    then concat(' shared with untrusted accounts ', untrusted_accounts #\u003e\u003e '{0}', ' and ', untrusted_accounts #\u003e\u003e '{1}')\n    else concat(' shared with untrusted account ', untrusted_accounts #\u003e\u003e '{0}', '.')\n  end\n    else\n      case\n        when shared_accounts is null then title || ' is not shared.'\n        else title || ' shared with trusted account(s).'\n      end\n  end reason\n  \n  , region, account_id\nfrom\n  shared_db_snapshot_data);\n",
  "Connector": "AWS",
  "ListOfTables": [
    "aws_rds_db_cluster_snapshot",
    "aws_rds_db_snapshot"
  ]
}