{
  "ID": "aws_common_dimensions_sql_elasticache_cluster_long_running",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "  with filter_clusters as (\n  select\n    distinct c.replication_group_id as name,\n    c.cache_cluster_create_time,\n    c._ctx,\n    c.region,\n    c.account_id,\n    'redis' as engine,\n    c.partition\n  from\n    aws_elasticache_replication_group as rg\n    left join aws_elasticache_cluster as c on rg.replication_group_id = c.replication_group_id\n  union\n  select\n    cache_cluster_id as name,\n    cache_cluster_create_time,\n    _ctx,\n    region,\n    account_id,\n    engine,\n    partition\n  from\n    aws_elasticache_cluster\n  where\n    engine = 'memcached'\n)\nselect\n  'arn:' || partition || ':elasticache:' || region || ':' || account_id || ':cluster:' || name as resource,\n  case\n    when date_part('day', now() - cache_cluster_create_time) \u003e $1 then 'alarm'\n    when date_part('day', now() - cache_cluster_create_time) \u003e $2 then 'info'\n    else 'ok'\n  end as status,\n  name || ' ' || engine || ' created on ' || cache_cluster_create_time || ' (' || date_part('day', now() - cache_cluster_create_time) || ' days).'\n  as reason\n  , region, account_id\nfrom\n  filter_clusters;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_elasticache_replication_group",
  "ListOfTables": [
    "aws_elasticache_cluster",
    "aws_elasticache_replication_group"
  ]
}