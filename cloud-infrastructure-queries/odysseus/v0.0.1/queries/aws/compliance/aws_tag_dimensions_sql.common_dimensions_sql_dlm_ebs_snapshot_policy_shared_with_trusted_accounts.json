{
  "ID": "aws_tag_dimensions_sql.common_dimensions_sql_dlm_ebs_snapshot_policy_shared_with_trusted_accounts",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with dlm_policy_shared_snapshot_copies as (\n  select\n    policy_id,\n    policy_type,\n    state,\n    -- A DLM policy can have at most 4 schedules, we need to verify each schedule if snapshots, through it will be shared to external accounts\n    (policy_details #\u003e '{Schedules,0,ShareRules,0,TargetAccounts}')::jsonb - ($1)::text[] as schedule_0_untrusted_accountss,\n    (policy_details #\u003e '{Schedules,1,ShareRules,0,TargetAccounts}')::jsonb - ($1)::text[] as schedule_1_untrusted_accountss,\n    (policy_details #\u003e '{Schedules,2,ShareRules,0,TargetAccounts}')::jsonb - ($1)::text[] as schedule_2_untrusted_accountss,\n    (policy_details #\u003e '{Schedules,3,ShareRules,0,TargetAccounts}')::jsonb - ($1)::text[] as schedule_3_untrusted_accountss,\n    account_id,\n    _ctx,\n    region,\n    tags\n  from\n    aws_dlm_lifecycle_policy\n  where\n    policy_type = 'EBS_SNAPSHOT_MANAGEMENT'\n)\nselect\n  policy_id as resource,\n  case\n    when state = 'DISABLED' then 'skip'\n    when jsonb_array_length(schedule_0_untrusted_accountss) \u003e 0\n    or jsonb_array_length(schedule_1_untrusted_accountss) \u003e 0\n    or jsonb_array_length(schedule_2_untrusted_accountss) \u003e 0\n    or jsonb_array_length(schedule_3_untrusted_accountss) \u003e 0 then 'info'\n  else 'ok'\n  end as status,\n  case\n    when state = 'DISABLED' then policy_id || ' policy disabled.'\n    when jsonb_array_length(schedule_0_untrusted_accountss) \u003e 0 then\n      policy_id || ' creates EBS snapshots and shares with ' ||\n      case\n        when jsonb_array_length(schedule_0_untrusted_accountss) \u003e 2 then\n          concat(schedule_0_untrusted_accountss #\u003e\u003e '{0}', ', ', schedule_0_untrusted_accountss #\u003e\u003e '{1}', ' and ', (jsonb_array_length(schedule_0_untrusted_accountss) - 2)::text, ' more untrusted account(s).')\n        when jsonb_array_length(schedule_0_untrusted_accountss) = 2 then\n          concat(schedule_0_untrusted_accountss #\u003e\u003e '{0}', ', ', schedule_0_untrusted_accountss #\u003e\u003e '{1}', ' untrusted accounts.')\n        else concat(schedule_0_untrusted_accountss #\u003e\u003e '{0}', ' untrusted account.')\n      end\n    when jsonb_array_length(schedule_1_untrusted_accountss) \u003e 0 then\n      policy_id || ' creates EBS snapshots and shares with ' ||\n      case\n        when jsonb_array_length(schedule_1_untrusted_accountss) \u003e 2 then\n          concat('untrusted accounts ', schedule_1_untrusted_accountss #\u003e\u003e '{0}', ', ', schedule_1_untrusted_accountss #\u003e\u003e '{1}', ' and ', (jsonb_array_length(schedule_1_untrusted_accountss) - 2)::text, ' more.')\n        when jsonb_array_length(schedule_1_untrusted_accountss) = 2 then\n          concat('untrusted accounts ', schedule_1_untrusted_accountss #\u003e\u003e '{0}', ' and ', schedule_1_untrusted_accountss #\u003e\u003e '{1}', '.')\n        else concat('untrusted account ', schedule_1_untrusted_accountss #\u003e\u003e '{0}', '.')\n      end\n\n    when jsonb_array_length(schedule_2_untrusted_accountss) \u003e 0 then\n      policy_id || ' creates EBS snapshots and shares with ' ||\n      case\n        when jsonb_array_length(schedule_2_untrusted_accountss) \u003e 2 then\n          concat('untrusted accounts ', schedule_2_untrusted_accountss #\u003e\u003e '{0}', ', ', schedule_2_untrusted_accountss #\u003e\u003e '{1}', ' and ', (jsonb_array_length(schedule_2_untrusted_accountss) - 2)::text, ' more.')\n        when jsonb_array_length(schedule_2_untrusted_accountss) = 2 then\n          concat('untrusted accounts ', schedule_2_untrusted_accountss #\u003e\u003e '{0}', ' and ', schedule_2_untrusted_accountss #\u003e\u003e '{1}', '.')\n        else concat('untrusted account ', schedule_2_untrusted_accountss #\u003e\u003e '{0}', '.')\n      end\n\n    when jsonb_array_length(schedule_3_untrusted_accountss) \u003e 0 then\n      policy_id || ' creates EBS snapshots and shares with ' ||\n      case\n        when jsonb_array_length(schedule_3_untrusted_accountss) \u003e 2 then\n          concat('untrusted accounts ', schedule_3_untrusted_accountss #\u003e\u003e '{0}', ', ', schedule_3_untrusted_accountss #\u003e\u003e '{1}', ' and ', (jsonb_array_length(schedule_3_untrusted_accountss) - 2)::text, ' more.')\n        when jsonb_array_length(schedule_3_untrusted_accountss) = 2 then\n          concat('untrusted accounts ', schedule_3_untrusted_accountss #\u003e\u003e '{0}', ' and ', schedule_3_untrusted_accountss #\u003e\u003e '{1}', '.')\n        else concat('untrusted account ', schedule_3_untrusted_accountss #\u003e\u003e '{0}', '.')\n      end\n    else policy_id || ' does not create any EBS snapshot shared with untrusted account(s).'\n  end as reason\n  \n  , region, account_id\nfrom\n  dlm_policy_shared_snapshot_copies;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_dlm_lifecycle_policy",
  "ListOfTables": [
    "aws_dlm_lifecycle_policy"
  ]
}