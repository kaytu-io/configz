{
  "ID": "aws_ecs_task_definition_container_environment_no_secret",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with definitions_with_secret_environment_variable as (\n  select\n    distinct task_definition_arn as arn\n  from\n    aws_ecs_task_definition,\n    jsonb_array_elements(container_definitions) as c,\n    jsonb_array_elements( c -\u003e 'Environment') as e,\n        jsonb_array_elements(\n    case jsonb_typeof(c -\u003e 'Secrets')\n        when 'array' then (c -\u003e 'Secrets')\n        else null end\n    ) as s\n  where\n    e -\u003e\u003e 'Name' like any (array ['AWS_ACCESS_KEY_ID', 'AWS_SECRET_ACCESS_KEY','ECS_ENGINE_AUTH_DATA'])\n    or s -\u003e\u003e 'Name' like any (array ['AWS_ACCESS_KEY_ID', 'AWS_SECRET_ACCESS_KEY','ECS_ENGINE_AUTH_DATA'])\n)\nselect\n  d.task_definition_arn as resource,\n  case\n    when e.arn is null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when e.arn is null then d.title || ' container environment variables does not have secrets.'\n    else d.title || ' container environment variables have secrets.'\n  end as reason\n  \n  , region, account_id\nfrom\n  aws_ecs_task_definition as d\n  left join definitions_with_secret_environment_variable as e on d.task_definition_arn = e.arn;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_ecs_task_definition",
  "ListOfTables": [
    "aws_ecs_task_definition"
  ]
}