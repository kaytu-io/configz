{
  "ID": "aws_tag_dimensions_sql.common_dimensions_sql_ec2_ami_shared_with_trusted_organization_units",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with all_amis as (\n  select\n    title,\n    public,\n    launch_permissions,\n    region,\n    _ctx,\n    tags,\n    account_id\n  from\n    aws_ec2_ami\n  order by\n    account_id,\n    _ctx,\n    region,\n    tags,\n    title\n),\nami_data as (\n  select\n    title,\n    public,\n    string_agg(lp -\u003e\u003e 'Group', ',') as public_access,\n    to_jsonb(string_to_array(string_agg(split_part((lp -\u003e\u003e 'OrganizationalUnitArn'), '/', 3), ','), ',')) as shared_organization_units,\n    to_jsonb(string_to_array(string_agg(split_part((lp -\u003e\u003e 'OrganizationalUnitArn'), '/', 3), ','), ',')) - ($1)::text[] as untrusted_organization_units,\n    region,\n    _ctx,\n    tags,\n    account_id\n  from\n    all_amis,\n    jsonb_array_elements(launch_permissions) lp\n  group by\n    title, public,region,_ctx,account_id,tags\n),\nevaluated_amis as (\n  select\n    all_amis.*,\n    public_access,\n    shared_organization_units,\n    untrusted_organization_units\n  from\n    all_amis left join ami_data on all_amis.account_id = ami_data.account_id and all_amis.region = ami_data.region and all_amis.title = ami_data.title\n)\nselect\n  title as resource,\n  case\n    when public then 'info'\n    when shared_organization_units is null then 'ok'\n    when untrusted_organization_units is not null then 'info'\n    else 'ok'\n  end as status,\n  case\n    when public then title || ' is public.'\n    when shared_organization_units is null then title || ' is not shared.'\n    when shared_organization_units is not null then title || ' shared with ' ||\n      case\n        when jsonb_array_length(untrusted_organization_units) \u003e 2\n        then concat('untrusted OUs ', untrusted_organization_units #\u003e\u003e '{0}', ', ', untrusted_organization_units #\u003e\u003e '{1}', ' and ' || (jsonb_array_length(untrusted_organization_units) - 2)::text || ' more.' )\n        when jsonb_array_length(untrusted_organization_units) = 2\n        then concat('untrusted OUs ', untrusted_organization_units #\u003e\u003e '{0}', ' and ', untrusted_organization_units #\u003e\u003e '{1}', '.')\n        else concat('untrusted OU ', untrusted_organization_units #\u003e\u003e '{0}', '.')\n      end\n    else title || ' shared with trusted OU(s).'\n  end as reason\n  \n  , region, account_id\nfrom\n  evaluated_amis;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_ec2_ami",
  "ListOfTables": [
    "aws_ec2_ami"
  ]
}