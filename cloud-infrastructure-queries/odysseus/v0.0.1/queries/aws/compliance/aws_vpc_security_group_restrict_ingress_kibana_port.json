{
  "ID": "aws_vpc_security_group_restrict_ingress_kibana_port",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with ingress_kibana_port as (\n  select\n    group_id,\n    count(*) as num_ssh_rules\n  from\n    aws_vpc_security_group_rule\n  where\n    type = 'ingress'\n    and (\n      cidr_ipv4 = '0.0.0.0/0'\n      or cidr_ipv6 = '::/0'\n    )\n    and (\n        ( ip_protocol = '-1'\n        and from_port is null\n        )\n        or (\n          from_port \u003e= 9200\n          and to_port \u003c= 9200\n        )\n        or (\n          from_port \u003e= 5601\n          and to_port \u003c= 5601\n        )\n    )\n  group by\n    group_id\n)\nselect\n  arn as resource,\n  case\n    when k.group_id is null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when k.group_id is null then sg.group_id || ' ingress restricted for kibana port from 0.0.0.0/0.'\n    else sg.group_id || ' contains ' || k.num_ssh_rules || ' ingress rule(s) allowing kibana port from 0.0.0.0/0.'\n  end as reason\n  \n  , sg.region, sg.account_id\nfrom\n  aws_vpc_security_group as sg\n  left join ingress_kibana_port as k on k.group_id = sg.group_id;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_vpc_security_group",
  "ListOfTables": [
    "aws_vpc_security_group",
    "aws_vpc_security_group_rule"
  ]
}