{
  "ID": "aws_rds_db_instance_in_backup_plan",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with mapped_with_id as (\n  select\n    jsonb_agg(elems) as mapped_ids\n  from\n    aws_backup_selection,\n    jsonb_array_elements(resources) as elems\n  group by backup_plan_id\n),\nmapped_with_tags as (\n  select\n    jsonb_agg(elems -\u003e\u003e 'ConditionKey') as mapped_tags\n  from\n    aws_backup_selection,\n    jsonb_array_elements(list_of_tags) as elems\n  group by backup_plan_id\n),\nbacked_up_instance as (\n  select\n    i.db_instance_identifier\n  from\n    aws_rds_db_instance as i\n    join mapped_with_id as t on t.mapped_ids ?| array[i.arn]\n  union\n  select\n    i.db_instance_identifier\n  from\n    aws_rds_db_instance as i\n    join mapped_with_tags as t on t.mapped_tags ?| array(select jsonb_object_keys(tags))\n)\nselect\n  i.arn as resource,\n  case\n    when b.db_instance_identifier is null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when b.db_instance_identifier is null then i.title || ' not in backup plan.'\n    else i.title || ' in backup plan.'\n  end as reason\n  \n  , i.region, i.account_id\nfrom\n  aws_rds_db_instance as i\n  left join backed_up_instance as b on i.db_instance_identifier = b.db_instance_identifier;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_rds_db_instance",
  "ListOfTables": [
    "aws_backup_selection",
    "aws_rds_db_instance"
  ]
}