{
  "ID": "aws_eks_cluster_control_plane_audit_logging_enabled",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with control_panel_audit_logging as (\n  select\n    distinct arn,\n    log -\u003e 'Types' as log_type\n  from\n    aws_eks_cluster,\n    jsonb_array_elements(logging -\u003e 'ClusterLogging') as log\n  where\n    log -\u003e\u003e 'Enabled' = 'true'\n    and (log -\u003e 'Types') @\u003e '[\"api\", \"audit\", \"authenticator\", \"controllerManager\", \"scheduler\"]'\n)\nselect\n  c.arn as resource,\n  case\n    when l.arn is not null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when l.arn is not null then c.title || ' control plane audit logging enabled for all log types.'\n    else\n      case when logging -\u003e 'ClusterLogging' @\u003e '[{\"Enabled\": true}]' then c.title || ' control plane audit logging not enabled for all log types.'\n      else c.title || ' control plane audit logging not enabled.'\n      end\n  end as reason\n  \n  , c.region, c.account_id\nfrom\n  aws_eks_cluster as c\n  left join control_panel_audit_logging as l on l.arn = c.arn;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_eks_cluster",
  "ListOfTables": [
    "aws_eks_cluster"
  ]
}