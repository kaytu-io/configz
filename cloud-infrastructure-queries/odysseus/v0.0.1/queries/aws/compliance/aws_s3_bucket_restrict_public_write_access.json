{
  "ID": "aws_s3_bucket_restrict_public_write_access",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with public_acl as (\n  select\n    distinct name\n  from\n    aws_s3_bucket,\n    jsonb_array_elements(acl -\u003e 'Grants') as grants\n  where\n    (grants -\u003e 'Grantee' -\u003e\u003e 'URI' = 'http://acs.amazonaws.com/groups/global/AllUsers'\n    or grants -\u003e 'Grantee' -\u003e\u003e 'URI' = 'http://acs.amazonaws.com/groups/global/AuthenticatedUsers')\n    and (\n      grants -\u003e\u003e 'Permission' = 'FULL_CONTROL'\n      or grants -\u003e\u003e 'Permission' = 'WRITE_ACP'\n      or grants -\u003e\u003e 'Permission' = 'WRITE'\n    )\n), write_access_policy as (\n    select\n      distinct name\n    from\n      aws_s3_bucket,\n      jsonb_array_elements(policy_std -\u003e 'Statement') as s,\n      jsonb_array_elements_text(s -\u003e 'Action') as action\n    where\n      s -\u003e\u003e 'Effect' = 'Allow'\n      and (\n        s -\u003e 'Principal' -\u003e 'AWS' = '[\"*\"]'\n        or s -\u003e\u003e 'Principal' = '*'\n      )\n      and (\n        action = '*'\n        or action = '*:*'\n        or action = 's3:*'\n        or action ilike 's3:put%'\n        or action ilike 's3:delete%'\n        or action ilike 's3:create%'\n        or action ilike 's3:update%'\n        or action ilike 's3:replicate%'\n        or action ilike 's3:restore%'\n      )\n)\nselect\n  b.arn as resource,\n  case\n    when (block_public_acls or a.name is null) and not bucket_policy_is_public then 'ok'\n    when (block_public_acls or a.name is null) and (bucket_policy_is_public and block_public_policy) then 'ok'\n    when bucket_policy_is_public and p.name is null then 'ok'\n    else 'alarm'\n  end status,\n  case\n    when (block_public_acls or a.name is null ) and not bucket_policy_is_public then b.title || ' not publicly writable.'\n    when (block_public_acls or a.name is null) and (bucket_policy_is_public and block_public_policy) then b.title || ' not publicly writable.'\n    when (block_public_acls or a.name is null) and (bucket_policy_is_public and p.name is null) then b.title || ' not publicly writable.'\n    else b.title || ' publicly writable.'\n  end reason\n  \n  , b.region, b.account_id\nfrom\n  aws_s3_bucket as b\n  left join public_acl as a on b.name = a.name\n  left join write_access_policy as p on b.name = p.name;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_s3_bucket",
  "ListOfTables": [
    "aws_s3_bucket"
  ]
}