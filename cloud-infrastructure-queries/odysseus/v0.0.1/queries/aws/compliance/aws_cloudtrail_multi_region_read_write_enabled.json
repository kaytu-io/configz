{
  "ID": "aws_cloudtrail_multi_region_read_write_enabled",
  "Engine": "odysseus-v0.0.1",
  "QueryToExecute": "with event_selectors_trail_details as (\n  select\n    distinct account_id\n  from\n    aws_cloudtrail_trail,\n    jsonb_array_elements(event_selectors) as e\n  where\n    (is_logging and is_multi_region_trail and e -\u003e\u003e 'ReadWriteType' = 'All')\n),\nadvanced_event_selectors_trail_details as (\n  select\n    distinct account_id\n  from\n    aws_cloudtrail_trail,\n    jsonb_array_elements_text(advanced_event_selectors) as a\n  where\n  -- when readOnly = true, then it is readOnly, when readOnly = false then it is writeOnly, if advanced_event_selectors is not null then it is both ReadWriteType\n    (is_logging and is_multi_region_trail and advanced_event_selectors is not null and (not a like '%readOnly%'))\n)\nselect\n  a.title as resource,\n  case\n    when d.account_id is null and ad.account_id is null then 'alarm'\n    else 'ok'\n  end as status,\n    case\n    when d.account_id is null and ad.account_id is null then 'cloudtrail disabled.'\n    else 'cloudtrail enabled.'\n  end as reason\n\n  , a.account_id\nfrom\n  aws_account as a\n  left join event_selectors_trail_details as d on d.account_id = a.account_id\n  left join advanced_event_selectors_trail_details as ad on ad.account_id = a.account_id;\n",
  "Connector": "AWS",
  "PrimaryTable": "aws_account",
  "ListOfTables": [
    "aws_account",
    "aws_cloudtrail_trail"
  ]
}